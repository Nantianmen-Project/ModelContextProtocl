// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mcp.proto

#include "mcp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_mcp_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Annotations;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_BlobResourceContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ClientCapabilities_ExperimentalEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_CompletionsCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Error;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Implementation;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_InputSchema_PropertiesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_LoggingCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MetaParams_AdditionalMetaEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_MetaResult_AdditionalMetaEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ModelHint;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NotificationParams_AdditionalParamsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PaginatedParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PromptsCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ReadResourceParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RequestParams_AdditionalParamsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ResourcesCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Result_AdditionalResultEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_RootsCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SamplingCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ServerCapabilities_ExperimentalEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_TextResourceContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ToolAnnotations;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ToolsCapability;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_InputSchema;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCBatchRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCBatchResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCError;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCNotification;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCResponse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetaParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_MetaResult;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Resource;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_InitializeParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_NotificationParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_RequestParams;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_ResourceContents;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Result;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_ClientCapabilities;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_mcp_2eproto ::google::protobuf::internal::SCCInfo<6> scc_info_ServerCapabilities;
}  // namespace protobuf_mcp_2eproto
namespace mcp {
class JSONRPCMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCMessage>
      _instance;
  const ::mcp::JSONRPCRequest* request_;
  const ::mcp::JSONRPCNotification* notification_;
  const ::mcp::JSONRPCBatchRequest* batch_request_;
  const ::mcp::JSONRPCResponse* response_;
  const ::mcp::JSONRPCError* error_;
  const ::mcp::JSONRPCBatchResponse* batch_response_;
} _JSONRPCMessage_default_instance_;
class JSONRPCRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCRequest>
      _instance;
} _JSONRPCRequest_default_instance_;
class JSONRPCNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCNotification>
      _instance;
} _JSONRPCNotification_default_instance_;
class JSONRPCResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCResponse>
      _instance;
} _JSONRPCResponse_default_instance_;
class JSONRPCErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCError>
      _instance;
} _JSONRPCError_default_instance_;
class JSONRPCBatchRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCBatchRequest>
      _instance;
} _JSONRPCBatchRequest_default_instance_;
class JSONRPCBatchResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONRPCBatchResponse>
      _instance;
} _JSONRPCBatchResponse_default_instance_;
class RequestParams_AdditionalParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestParams_AdditionalParamsEntry_DoNotUse>
      _instance;
} _RequestParams_AdditionalParamsEntry_DoNotUse_default_instance_;
class RequestParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RequestParams>
      _instance;
} _RequestParams_default_instance_;
class NotificationParams_AdditionalParamsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotificationParams_AdditionalParamsEntry_DoNotUse>
      _instance;
} _NotificationParams_AdditionalParamsEntry_DoNotUse_default_instance_;
class NotificationParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NotificationParams>
      _instance;
} _NotificationParams_default_instance_;
class MetaParams_AdditionalMetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaParams_AdditionalMetaEntry_DoNotUse>
      _instance;
} _MetaParams_AdditionalMetaEntry_DoNotUse_default_instance_;
class MetaParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaParams>
      _instance;
} _MetaParams_default_instance_;
class Result_AdditionalResultEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result_AdditionalResultEntry_DoNotUse>
      _instance;
} _Result_AdditionalResultEntry_DoNotUse_default_instance_;
class ResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Result>
      _instance;
} _Result_default_instance_;
class MetaResult_AdditionalMetaEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaResult_AdditionalMetaEntry_DoNotUse>
      _instance;
} _MetaResult_AdditionalMetaEntry_DoNotUse_default_instance_;
class MetaResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MetaResult>
      _instance;
} _MetaResult_default_instance_;
class ErrorDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Error>
      _instance;
} _Error_default_instance_;
class ImplementationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Implementation>
      _instance;
} _Implementation_default_instance_;
class ClientCapabilities_ExperimentalEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCapabilities_ExperimentalEntry_DoNotUse>
      _instance;
} _ClientCapabilities_ExperimentalEntry_DoNotUse_default_instance_;
class ClientCapabilitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCapabilities>
      _instance;
} _ClientCapabilities_default_instance_;
class ServerCapabilities_ExperimentalEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerCapabilities_ExperimentalEntry_DoNotUse>
      _instance;
} _ServerCapabilities_ExperimentalEntry_DoNotUse_default_instance_;
class ServerCapabilitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerCapabilities>
      _instance;
} _ServerCapabilities_default_instance_;
class RootsCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RootsCapability>
      _instance;
} _RootsCapability_default_instance_;
class SamplingCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SamplingCapability>
      _instance;
} _SamplingCapability_default_instance_;
class LoggingCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoggingCapability>
      _instance;
} _LoggingCapability_default_instance_;
class CompletionsCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CompletionsCapability>
      _instance;
} _CompletionsCapability_default_instance_;
class PromptsCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PromptsCapability>
      _instance;
} _PromptsCapability_default_instance_;
class ResourcesCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourcesCapability>
      _instance;
} _ResourcesCapability_default_instance_;
class ToolsCapabilityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToolsCapability>
      _instance;
} _ToolsCapability_default_instance_;
class ResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Resource>
      _instance;
} _Resource_default_instance_;
class ResourceTemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceTemplate>
      _instance;
} _ResourceTemplate_default_instance_;
class ResourceContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceContents>
      _instance;
  const ::mcp::TextResourceContents* text_;
  const ::mcp::BlobResourceContents* blob_;
} _ResourceContents_default_instance_;
class TextResourceContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextResourceContents>
      _instance;
} _TextResourceContents_default_instance_;
class BlobResourceContentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlobResourceContents>
      _instance;
} _BlobResourceContents_default_instance_;
class ToolDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Tool>
      _instance;
} _Tool_default_instance_;
class InputSchema_PropertiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputSchema_PropertiesEntry_DoNotUse>
      _instance;
} _InputSchema_PropertiesEntry_DoNotUse_default_instance_;
class InputSchemaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InputSchema>
      _instance;
} _InputSchema_default_instance_;
class ToolAnnotationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ToolAnnotations>
      _instance;
} _ToolAnnotations_default_instance_;
class AnnotationsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Annotations>
      _instance;
} _Annotations_default_instance_;
class TextContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TextContent>
      _instance;
} _TextContent_default_instance_;
class ImageContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ImageContent>
      _instance;
} _ImageContent_default_instance_;
class AudioContentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AudioContent>
      _instance;
} _AudioContent_default_instance_;
class ModelPreferencesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelPreferences>
      _instance;
} _ModelPreferences_default_instance_;
class ModelHintDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ModelHint>
      _instance;
} _ModelHint_default_instance_;
class ResourceReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ResourceReference>
      _instance;
} _ResourceReference_default_instance_;
class PromptReferenceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PromptReference>
      _instance;
} _PromptReference_default_instance_;
class RootDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Root>
      _instance;
} _Root_default_instance_;
class InitializeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializeRequest>
      _instance;
} _InitializeRequest_default_instance_;
class InitializeParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializeParams>
      _instance;
} _InitializeParams_default_instance_;
class InitializeResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<InitializeResult>
      _instance;
} _InitializeResult_default_instance_;
class ListResourcesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListResourcesRequest>
      _instance;
} _ListResourcesRequest_default_instance_;
class ListResourcesResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ListResourcesResult>
      _instance;
} _ListResourcesResult_default_instance_;
class ReadResourceRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResourceRequest>
      _instance;
} _ReadResourceRequest_default_instance_;
class ReadResourceParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResourceParams>
      _instance;
} _ReadResourceParams_default_instance_;
class ReadResourceResultDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ReadResourceResult>
      _instance;
} _ReadResourceResult_default_instance_;
class PaginatedParamsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PaginatedParams>
      _instance;
} _PaginatedParams_default_instance_;
}  // namespace mcp
namespace protobuf_mcp_2eproto {
static void InitDefaultsJSONRPCMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCMessage_default_instance_;
    new (ptr) ::mcp::JSONRPCMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_JSONRPCMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsJSONRPCMessage}, {
      &protobuf_mcp_2eproto::scc_info_JSONRPCRequest.base,
      &protobuf_mcp_2eproto::scc_info_JSONRPCNotification.base,
      &protobuf_mcp_2eproto::scc_info_JSONRPCBatchRequest.base,
      &protobuf_mcp_2eproto::scc_info_JSONRPCResponse.base,
      &protobuf_mcp_2eproto::scc_info_JSONRPCError.base,
      &protobuf_mcp_2eproto::scc_info_JSONRPCBatchResponse.base,}};

static void InitDefaultsJSONRPCRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCRequest_default_instance_;
    new (ptr) ::mcp::JSONRPCRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCRequest}, {
      &protobuf_mcp_2eproto::scc_info_RequestParams.base,}};

static void InitDefaultsJSONRPCNotification() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCNotification_default_instance_;
    new (ptr) ::mcp::JSONRPCNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCNotification::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCNotification =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCNotification}, {
      &protobuf_mcp_2eproto::scc_info_NotificationParams.base,}};

static void InitDefaultsJSONRPCResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCResponse_default_instance_;
    new (ptr) ::mcp::JSONRPCResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCResponse}, {
      &protobuf_mcp_2eproto::scc_info_Result.base,}};

static void InitDefaultsJSONRPCError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCError_default_instance_;
    new (ptr) ::mcp::JSONRPCError();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCError::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCError =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCError}, {
      &protobuf_mcp_2eproto::scc_info_Error.base,}};

static void InitDefaultsJSONRPCBatchRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCBatchRequest_default_instance_;
    new (ptr) ::mcp::JSONRPCBatchRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCBatchRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCBatchRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCBatchRequest}, {
      &protobuf_mcp_2eproto::scc_info_JSONRPCRequest.base,}};

static void InitDefaultsJSONRPCBatchResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_JSONRPCBatchResponse_default_instance_;
    new (ptr) ::mcp::JSONRPCBatchResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::JSONRPCBatchResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_JSONRPCBatchResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJSONRPCBatchResponse}, {
      &protobuf_mcp_2eproto::scc_info_JSONRPCResponse.base,}};

static void InitDefaultsRequestParams_AdditionalParamsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_RequestParams_AdditionalParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::RequestParams_AdditionalParamsEntry_DoNotUse();
  }
  ::mcp::RequestParams_AdditionalParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RequestParams_AdditionalParamsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRequestParams_AdditionalParamsEntry_DoNotUse}, {}};

static void InitDefaultsRequestParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_RequestParams_default_instance_;
    new (ptr) ::mcp::RequestParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::RequestParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RequestParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRequestParams}, {
      &protobuf_mcp_2eproto::scc_info_MetaParams.base,
      &protobuf_mcp_2eproto::scc_info_RequestParams_AdditionalParamsEntry_DoNotUse.base,}};

static void InitDefaultsNotificationParams_AdditionalParamsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_NotificationParams_AdditionalParamsEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse();
  }
  ::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NotificationParams_AdditionalParamsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNotificationParams_AdditionalParamsEntry_DoNotUse}, {}};

static void InitDefaultsNotificationParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_NotificationParams_default_instance_;
    new (ptr) ::mcp::NotificationParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::NotificationParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_NotificationParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsNotificationParams}, {
      &protobuf_mcp_2eproto::scc_info_MetaParams.base,
      &protobuf_mcp_2eproto::scc_info_NotificationParams_AdditionalParamsEntry_DoNotUse.base,}};

static void InitDefaultsMetaParams_AdditionalMetaEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_MetaParams_AdditionalMetaEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::MetaParams_AdditionalMetaEntry_DoNotUse();
  }
  ::mcp::MetaParams_AdditionalMetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetaParams_AdditionalMetaEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetaParams_AdditionalMetaEntry_DoNotUse}, {}};

static void InitDefaultsMetaParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_MetaParams_default_instance_;
    new (ptr) ::mcp::MetaParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::MetaParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetaParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetaParams}, {
      &protobuf_mcp_2eproto::scc_info_MetaParams_AdditionalMetaEntry_DoNotUse.base,}};

static void InitDefaultsResult_AdditionalResultEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Result_AdditionalResultEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::Result_AdditionalResultEntry_DoNotUse();
  }
  ::mcp::Result_AdditionalResultEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Result_AdditionalResultEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResult_AdditionalResultEntry_DoNotUse}, {}};

static void InitDefaultsResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Result_default_instance_;
    new (ptr) ::mcp::Result();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Result::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Result =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResult}, {
      &protobuf_mcp_2eproto::scc_info_MetaResult.base,
      &protobuf_mcp_2eproto::scc_info_Result_AdditionalResultEntry_DoNotUse.base,}};

static void InitDefaultsMetaResult_AdditionalMetaEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_MetaResult_AdditionalMetaEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::MetaResult_AdditionalMetaEntry_DoNotUse();
  }
  ::mcp::MetaResult_AdditionalMetaEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_MetaResult_AdditionalMetaEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMetaResult_AdditionalMetaEntry_DoNotUse}, {}};

static void InitDefaultsMetaResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_MetaResult_default_instance_;
    new (ptr) ::mcp::MetaResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::MetaResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MetaResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMetaResult}, {
      &protobuf_mcp_2eproto::scc_info_MetaResult_AdditionalMetaEntry_DoNotUse.base,}};

static void InitDefaultsError() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Error_default_instance_;
    new (ptr) ::mcp::Error();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Error::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Error =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsError}, {}};

static void InitDefaultsImplementation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Implementation_default_instance_;
    new (ptr) ::mcp::Implementation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Implementation::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Implementation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsImplementation}, {}};

static void InitDefaultsClientCapabilities_ExperimentalEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ClientCapabilities_ExperimentalEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse();
  }
  ::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ClientCapabilities_ExperimentalEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsClientCapabilities_ExperimentalEntry_DoNotUse}, {}};

static void InitDefaultsClientCapabilities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ClientCapabilities_default_instance_;
    new (ptr) ::mcp::ClientCapabilities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ClientCapabilities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ClientCapabilities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsClientCapabilities}, {
      &protobuf_mcp_2eproto::scc_info_ClientCapabilities_ExperimentalEntry_DoNotUse.base,
      &protobuf_mcp_2eproto::scc_info_RootsCapability.base,
      &protobuf_mcp_2eproto::scc_info_SamplingCapability.base,}};

static void InitDefaultsServerCapabilities_ExperimentalEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ServerCapabilities_ExperimentalEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse();
  }
  ::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ServerCapabilities_ExperimentalEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsServerCapabilities_ExperimentalEntry_DoNotUse}, {}};

static void InitDefaultsServerCapabilities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ServerCapabilities_default_instance_;
    new (ptr) ::mcp::ServerCapabilities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ServerCapabilities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<6> scc_info_ServerCapabilities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 6, InitDefaultsServerCapabilities}, {
      &protobuf_mcp_2eproto::scc_info_ServerCapabilities_ExperimentalEntry_DoNotUse.base,
      &protobuf_mcp_2eproto::scc_info_LoggingCapability.base,
      &protobuf_mcp_2eproto::scc_info_CompletionsCapability.base,
      &protobuf_mcp_2eproto::scc_info_PromptsCapability.base,
      &protobuf_mcp_2eproto::scc_info_ResourcesCapability.base,
      &protobuf_mcp_2eproto::scc_info_ToolsCapability.base,}};

static void InitDefaultsRootsCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_RootsCapability_default_instance_;
    new (ptr) ::mcp::RootsCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::RootsCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RootsCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRootsCapability}, {}};

static void InitDefaultsSamplingCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_SamplingCapability_default_instance_;
    new (ptr) ::mcp::SamplingCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::SamplingCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SamplingCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSamplingCapability}, {}};

static void InitDefaultsLoggingCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_LoggingCapability_default_instance_;
    new (ptr) ::mcp::LoggingCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::LoggingCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LoggingCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLoggingCapability}, {}};

static void InitDefaultsCompletionsCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_CompletionsCapability_default_instance_;
    new (ptr) ::mcp::CompletionsCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::CompletionsCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CompletionsCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCompletionsCapability}, {}};

static void InitDefaultsPromptsCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_PromptsCapability_default_instance_;
    new (ptr) ::mcp::PromptsCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::PromptsCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PromptsCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPromptsCapability}, {}};

static void InitDefaultsResourcesCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ResourcesCapability_default_instance_;
    new (ptr) ::mcp::ResourcesCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ResourcesCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourcesCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourcesCapability}, {}};

static void InitDefaultsToolsCapability() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ToolsCapability_default_instance_;
    new (ptr) ::mcp::ToolsCapability();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ToolsCapability::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ToolsCapability =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsToolsCapability}, {}};

static void InitDefaultsResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Resource_default_instance_;
    new (ptr) ::mcp::Resource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Resource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Resource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResource}, {
      &protobuf_mcp_2eproto::scc_info_Annotations.base,}};

static void InitDefaultsResourceTemplate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ResourceTemplate_default_instance_;
    new (ptr) ::mcp::ResourceTemplate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ResourceTemplate::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ResourceTemplate =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsResourceTemplate}, {
      &protobuf_mcp_2eproto::scc_info_Annotations.base,}};

static void InitDefaultsResourceContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ResourceContents_default_instance_;
    new (ptr) ::mcp::ResourceContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ResourceContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_ResourceContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsResourceContents}, {
      &protobuf_mcp_2eproto::scc_info_TextResourceContents.base,
      &protobuf_mcp_2eproto::scc_info_BlobResourceContents.base,}};

static void InitDefaultsTextResourceContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_TextResourceContents_default_instance_;
    new (ptr) ::mcp::TextResourceContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::TextResourceContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TextResourceContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTextResourceContents}, {}};

static void InitDefaultsBlobResourceContents() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_BlobResourceContents_default_instance_;
    new (ptr) ::mcp::BlobResourceContents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::BlobResourceContents::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BlobResourceContents =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBlobResourceContents}, {}};

static void InitDefaultsTool() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Tool_default_instance_;
    new (ptr) ::mcp::Tool();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Tool::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Tool =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTool}, {
      &protobuf_mcp_2eproto::scc_info_InputSchema.base,
      &protobuf_mcp_2eproto::scc_info_ToolAnnotations.base,}};

static void InitDefaultsInputSchema_PropertiesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_InputSchema_PropertiesEntry_DoNotUse_default_instance_;
    new (ptr) ::mcp::InputSchema_PropertiesEntry_DoNotUse();
  }
  ::mcp::InputSchema_PropertiesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_InputSchema_PropertiesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInputSchema_PropertiesEntry_DoNotUse}, {}};

static void InitDefaultsInputSchema() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_InputSchema_default_instance_;
    new (ptr) ::mcp::InputSchema();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::InputSchema::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InputSchema =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInputSchema}, {
      &protobuf_mcp_2eproto::scc_info_InputSchema_PropertiesEntry_DoNotUse.base,}};

static void InitDefaultsToolAnnotations() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ToolAnnotations_default_instance_;
    new (ptr) ::mcp::ToolAnnotations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ToolAnnotations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ToolAnnotations =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsToolAnnotations}, {}};

static void InitDefaultsAnnotations() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Annotations_default_instance_;
    new (ptr) ::mcp::Annotations();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Annotations::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Annotations =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAnnotations}, {}};

static void InitDefaultsTextContent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_TextContent_default_instance_;
    new (ptr) ::mcp::TextContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::TextContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_TextContent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTextContent}, {
      &protobuf_mcp_2eproto::scc_info_Annotations.base,}};

static void InitDefaultsImageContent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ImageContent_default_instance_;
    new (ptr) ::mcp::ImageContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ImageContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ImageContent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsImageContent}, {
      &protobuf_mcp_2eproto::scc_info_Annotations.base,}};

static void InitDefaultsAudioContent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_AudioContent_default_instance_;
    new (ptr) ::mcp::AudioContent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::AudioContent::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AudioContent =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAudioContent}, {
      &protobuf_mcp_2eproto::scc_info_Annotations.base,}};

static void InitDefaultsModelPreferences() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ModelPreferences_default_instance_;
    new (ptr) ::mcp::ModelPreferences();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ModelPreferences::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ModelPreferences =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsModelPreferences}, {
      &protobuf_mcp_2eproto::scc_info_ModelHint.base,}};

static void InitDefaultsModelHint() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ModelHint_default_instance_;
    new (ptr) ::mcp::ModelHint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ModelHint::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ModelHint =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsModelHint}, {}};

static void InitDefaultsResourceReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ResourceReference_default_instance_;
    new (ptr) ::mcp::ResourceReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ResourceReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ResourceReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsResourceReference}, {}};

static void InitDefaultsPromptReference() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_PromptReference_default_instance_;
    new (ptr) ::mcp::PromptReference();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::PromptReference::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PromptReference =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPromptReference}, {}};

static void InitDefaultsRoot() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_Root_default_instance_;
    new (ptr) ::mcp::Root();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::Root::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Root =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRoot}, {}};

static void InitDefaultsInitializeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_InitializeRequest_default_instance_;
    new (ptr) ::mcp::InitializeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::InitializeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_InitializeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsInitializeRequest}, {
      &protobuf_mcp_2eproto::scc_info_InitializeParams.base,}};

static void InitDefaultsInitializeParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_InitializeParams_default_instance_;
    new (ptr) ::mcp::InitializeParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::InitializeParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InitializeParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInitializeParams}, {
      &protobuf_mcp_2eproto::scc_info_ClientCapabilities.base,
      &protobuf_mcp_2eproto::scc_info_Implementation.base,}};

static void InitDefaultsInitializeResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_InitializeResult_default_instance_;
    new (ptr) ::mcp::InitializeResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::InitializeResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_InitializeResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsInitializeResult}, {
      &protobuf_mcp_2eproto::scc_info_ServerCapabilities.base,
      &protobuf_mcp_2eproto::scc_info_Implementation.base,}};

static void InitDefaultsListResourcesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ListResourcesRequest_default_instance_;
    new (ptr) ::mcp::ListResourcesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ListResourcesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListResourcesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListResourcesRequest}, {
      &protobuf_mcp_2eproto::scc_info_PaginatedParams.base,}};

static void InitDefaultsListResourcesResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ListResourcesResult_default_instance_;
    new (ptr) ::mcp::ListResourcesResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ListResourcesResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ListResourcesResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsListResourcesResult}, {
      &protobuf_mcp_2eproto::scc_info_Resource.base,}};

static void InitDefaultsReadResourceRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ReadResourceRequest_default_instance_;
    new (ptr) ::mcp::ReadResourceRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ReadResourceRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadResourceRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadResourceRequest}, {
      &protobuf_mcp_2eproto::scc_info_ReadResourceParams.base,}};

static void InitDefaultsReadResourceParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ReadResourceParams_default_instance_;
    new (ptr) ::mcp::ReadResourceParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ReadResourceParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ReadResourceParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsReadResourceParams}, {}};

static void InitDefaultsReadResourceResult() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_ReadResourceResult_default_instance_;
    new (ptr) ::mcp::ReadResourceResult();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::ReadResourceResult::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ReadResourceResult =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsReadResourceResult}, {
      &protobuf_mcp_2eproto::scc_info_ResourceContents.base,}};

static void InitDefaultsPaginatedParams() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::mcp::_PaginatedParams_default_instance_;
    new (ptr) ::mcp::PaginatedParams();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::mcp::PaginatedParams::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PaginatedParams =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPaginatedParams}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCMessage.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCNotification.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCError.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCBatchRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONRPCBatchResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestParams_AdditionalParamsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RequestParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotificationParams_AdditionalParamsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NotificationParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaParams_AdditionalMetaEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Result_AdditionalResultEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Result.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaResult_AdditionalMetaEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MetaResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Error.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Implementation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCapabilities_ExperimentalEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCapabilities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerCapabilities_ExperimentalEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ServerCapabilities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RootsCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SamplingCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LoggingCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CompletionsCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PromptsCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourcesCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToolsCapability.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Resource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceTemplate.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextResourceContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlobResourceContents.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Tool.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputSchema_PropertiesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InputSchema.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ToolAnnotations.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Annotations.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TextContent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ImageContent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AudioContent.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelPreferences.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ModelHint.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ResourceReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PromptReference.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Root.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializeParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_InitializeResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListResourcesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ListResourcesResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResourceRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResourceParams.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ReadResourceResult.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PaginatedParams.base);
}

::google::protobuf::Metadata file_level_metadata[57];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, request_),
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, notification_),
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, batch_request_),
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, response_),
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, error_),
  offsetof(::mcp::JSONRPCMessageDefaultTypeInternal, batch_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCMessage, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCRequest, jsonrpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCRequest, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCNotification, jsonrpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCNotification, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCNotification, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCResponse, jsonrpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCError, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCError, jsonrpc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCError, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCError, error_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCBatchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCBatchRequest, requests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCBatchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::JSONRPCBatchResponse, responses_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams_AdditionalParamsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams_AdditionalParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams_AdditionalParamsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams_AdditionalParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams, _meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RequestParams, additional_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams, _meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::NotificationParams, additional_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams_AdditionalMetaEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams_AdditionalMetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams_AdditionalMetaEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams_AdditionalMetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams, progress_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaParams, additional_meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result_AdditionalResultEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result_AdditionalResultEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result_AdditionalResultEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result_AdditionalResultEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result, _meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Result, additional_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult_AdditionalMetaEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult_AdditionalMetaEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult_AdditionalMetaEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult_AdditionalMetaEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::MetaResult, additional_meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Error, code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Error, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Error, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Implementation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Implementation, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Implementation, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities, experimental_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities, roots_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ClientCapabilities, sampling_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, experimental_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, logging_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, completions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, prompts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ServerCapabilities, tools_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RootsCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::RootsCapability, list_changed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::SamplingCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::LoggingCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::CompletionsCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PromptsCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PromptsCapability, list_changed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourcesCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourcesCapability, subscribe_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourcesCapability, list_changed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolsCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolsCapability, list_changed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Resource, size_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, uri_template_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceTemplate, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceContents, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceContents, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceContents, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceContents, mime_type_),
  offsetof(::mcp::ResourceContentsDefaultTypeInternal, text_),
  offsetof(::mcp::ResourceContentsDefaultTypeInternal, blob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceContents, content_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextResourceContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextResourceContents, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::BlobResourceContents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::BlobResourceContents, blob_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Tool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Tool, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Tool, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Tool, input_schema_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Tool, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema_PropertiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema_PropertiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema_PropertiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema_PropertiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InputSchema, required_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, read_only_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, destructive_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, idempotent_hint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ToolAnnotations, open_world_hint_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Annotations, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Annotations, audience_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Annotations, priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextContent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextContent, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::TextContent, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ImageContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ImageContent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ImageContent, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ImageContent, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ImageContent, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::AudioContent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::AudioContent, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::AudioContent, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::AudioContent, mime_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::AudioContent, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelPreferences, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelPreferences, hints_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelPreferences, cost_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelPreferences, speed_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelPreferences, intelligence_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelHint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ModelHint, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceReference, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ResourceReference, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PromptReference, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PromptReference, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PromptReference, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Root, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Root, uri_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::Root, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeRequest, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeParams, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeParams, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeParams, client_info_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeResult, protocol_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeResult, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeResult, server_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::InitializeResult, instructions_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesRequest, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesResult, resources_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ListResourcesResult, next_cursor_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceRequest, params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceParams, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::ReadResourceResult, contents_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PaginatedParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::mcp::PaginatedParams, cursor_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::mcp::JSONRPCMessage)},
  { 12, -1, sizeof(::mcp::JSONRPCRequest)},
  { 21, -1, sizeof(::mcp::JSONRPCNotification)},
  { 29, -1, sizeof(::mcp::JSONRPCResponse)},
  { 37, -1, sizeof(::mcp::JSONRPCError)},
  { 45, -1, sizeof(::mcp::JSONRPCBatchRequest)},
  { 51, -1, sizeof(::mcp::JSONRPCBatchResponse)},
  { 57, 64, sizeof(::mcp::RequestParams_AdditionalParamsEntry_DoNotUse)},
  { 66, -1, sizeof(::mcp::RequestParams)},
  { 73, 80, sizeof(::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse)},
  { 82, -1, sizeof(::mcp::NotificationParams)},
  { 89, 96, sizeof(::mcp::MetaParams_AdditionalMetaEntry_DoNotUse)},
  { 98, -1, sizeof(::mcp::MetaParams)},
  { 105, 112, sizeof(::mcp::Result_AdditionalResultEntry_DoNotUse)},
  { 114, -1, sizeof(::mcp::Result)},
  { 121, 128, sizeof(::mcp::MetaResult_AdditionalMetaEntry_DoNotUse)},
  { 130, -1, sizeof(::mcp::MetaResult)},
  { 136, -1, sizeof(::mcp::Error)},
  { 144, -1, sizeof(::mcp::Implementation)},
  { 151, 158, sizeof(::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse)},
  { 160, -1, sizeof(::mcp::ClientCapabilities)},
  { 168, 175, sizeof(::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse)},
  { 177, -1, sizeof(::mcp::ServerCapabilities)},
  { 188, -1, sizeof(::mcp::RootsCapability)},
  { 194, -1, sizeof(::mcp::SamplingCapability)},
  { 199, -1, sizeof(::mcp::LoggingCapability)},
  { 204, -1, sizeof(::mcp::CompletionsCapability)},
  { 209, -1, sizeof(::mcp::PromptsCapability)},
  { 215, -1, sizeof(::mcp::ResourcesCapability)},
  { 222, -1, sizeof(::mcp::ToolsCapability)},
  { 228, -1, sizeof(::mcp::Resource)},
  { 239, -1, sizeof(::mcp::ResourceTemplate)},
  { 249, -1, sizeof(::mcp::ResourceContents)},
  { 259, -1, sizeof(::mcp::TextResourceContents)},
  { 265, -1, sizeof(::mcp::BlobResourceContents)},
  { 271, -1, sizeof(::mcp::Tool)},
  { 280, 287, sizeof(::mcp::InputSchema_PropertiesEntry_DoNotUse)},
  { 289, -1, sizeof(::mcp::InputSchema)},
  { 297, -1, sizeof(::mcp::ToolAnnotations)},
  { 307, -1, sizeof(::mcp::Annotations)},
  { 314, -1, sizeof(::mcp::TextContent)},
  { 322, -1, sizeof(::mcp::ImageContent)},
  { 331, -1, sizeof(::mcp::AudioContent)},
  { 340, -1, sizeof(::mcp::ModelPreferences)},
  { 349, -1, sizeof(::mcp::ModelHint)},
  { 355, -1, sizeof(::mcp::ResourceReference)},
  { 362, -1, sizeof(::mcp::PromptReference)},
  { 369, -1, sizeof(::mcp::Root)},
  { 376, -1, sizeof(::mcp::InitializeRequest)},
  { 383, -1, sizeof(::mcp::InitializeParams)},
  { 391, -1, sizeof(::mcp::InitializeResult)},
  { 400, -1, sizeof(::mcp::ListResourcesRequest)},
  { 407, -1, sizeof(::mcp::ListResourcesResult)},
  { 414, -1, sizeof(::mcp::ReadResourceRequest)},
  { 421, -1, sizeof(::mcp::ReadResourceParams)},
  { 427, -1, sizeof(::mcp::ReadResourceResult)},
  { 433, -1, sizeof(::mcp::PaginatedParams)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCError_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCBatchRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_JSONRPCBatchResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_RequestParams_AdditionalParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_RequestParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_NotificationParams_AdditionalParamsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_NotificationParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_MetaParams_AdditionalMetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_MetaParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Result_AdditionalResultEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Result_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_MetaResult_AdditionalMetaEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_MetaResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Error_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Implementation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ClientCapabilities_ExperimentalEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ClientCapabilities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ServerCapabilities_ExperimentalEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ServerCapabilities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_RootsCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_SamplingCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_LoggingCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_CompletionsCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_PromptsCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ResourcesCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ToolsCapability_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Resource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ResourceTemplate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ResourceContents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_TextResourceContents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_BlobResourceContents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Tool_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_InputSchema_PropertiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_InputSchema_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ToolAnnotations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Annotations_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_TextContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ImageContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_AudioContent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ModelPreferences_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ModelHint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ResourceReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_PromptReference_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_Root_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_InitializeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_InitializeParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_InitializeResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ListResourcesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ListResourcesResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ReadResourceRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ReadResourceParams_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_ReadResourceResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::mcp::_PaginatedParams_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "mcp.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 57);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tmcp.proto\022\003mcp\"\253\002\n\016JSONRPCMessage\022&\n\007r"
      "equest\030\001 \001(\0132\023.mcp.JSONRPCRequestH\000\0220\n\014n"
      "otification\030\002 \001(\0132\030.mcp.JSONRPCNotificat"
      "ionH\000\0221\n\rbatch_request\030\003 \001(\0132\030.mcp.JSONR"
      "PCBatchRequestH\000\022(\n\010response\030\004 \001(\0132\024.mcp"
      ".JSONRPCResponseH\000\022\"\n\005error\030\005 \001(\0132\021.mcp."
      "JSONRPCErrorH\000\0223\n\016batch_response\030\006 \001(\0132\031"
      ".mcp.JSONRPCBatchResponseH\000B\t\n\007message\"a"
      "\n\016JSONRPCRequest\022\017\n\007jsonrpc\030\001 \001(\t\022\n\n\002id\030"
      "\002 \001(\t\022\016\n\006method\030\003 \001(\t\022\"\n\006params\030\004 \001(\0132\022."
      "mcp.RequestParams\"_\n\023JSONRPCNotification"
      "\022\017\n\007jsonrpc\030\001 \001(\t\022\016\n\006method\030\002 \001(\t\022\'\n\006par"
      "ams\030\003 \001(\0132\027.mcp.NotificationParams\"K\n\017JS"
      "ONRPCResponse\022\017\n\007jsonrpc\030\001 \001(\t\022\n\n\002id\030\002 \001"
      "(\t\022\033\n\006result\030\003 \001(\0132\013.mcp.Result\"F\n\014JSONR"
      "PCError\022\017\n\007jsonrpc\030\001 \001(\t\022\n\n\002id\030\002 \001(\t\022\031\n\005"
      "error\030\003 \001(\0132\n.mcp.Error\"<\n\023JSONRPCBatchR"
      "equest\022%\n\010requests\030\001 \003(\0132\023.mcp.JSONRPCRe"
      "quest\"\?\n\024JSONRPCBatchResponse\022\'\n\trespons"
      "es\030\001 \003(\0132\024.mcp.JSONRPCResponse\"\255\001\n\rReque"
      "stParams\022\036\n\005_meta\030\001 \001(\0132\017.mcp.MetaParams"
      "\022C\n\021additional_params\030\002 \003(\0132(.mcp.Reques"
      "tParams.AdditionalParamsEntry\0327\n\025Additio"
      "nalParamsEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\014:\0028\001\"\267\001\n\022NotificationParams\022\036\n\005_meta\030\001"
      " \001(\0132\017.mcp.MetaParams\022H\n\021additional_para"
      "ms\030\002 \003(\0132-.mcp.NotificationParams.Additi"
      "onalParamsEntry\0327\n\025AdditionalParamsEntry"
      "\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\231\001\n\nMet"
      "aParams\022\026\n\016progress_token\030\001 \001(\t\022<\n\017addit"
      "ional_meta\030\002 \003(\0132#.mcp.MetaParams.Additi"
      "onalMetaEntry\0325\n\023AdditionalMetaEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\237\001\n\006Result\022"
      "\036\n\005_meta\030\001 \001(\0132\017.mcp.MetaResult\022<\n\021addit"
      "ional_result\030\002 \003(\0132!.mcp.Result.Addition"
      "alResultEntry\0327\n\025AdditionalResultEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\201\001\n\nMetaR"
      "esult\022<\n\017additional_meta\030\001 \003(\0132#.mcp.Met"
      "aResult.AdditionalMetaEntry\0325\n\023Additiona"
      "lMetaEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\002"
      "8\001\"4\n\005Error\022\014\n\004code\030\001 \001(\005\022\017\n\007message\030\002 \001"
      "(\t\022\014\n\004data\030\003 \001(\014\"/\n\016Implementation\022\014\n\004na"
      "me\030\001 \001(\t\022\017\n\007version\030\002 \001(\t\"\332\001\n\022ClientCapa"
      "bilities\022\?\n\014experimental\030\001 \003(\0132).mcp.Cli"
      "entCapabilities.ExperimentalEntry\022#\n\005roo"
      "ts\030\002 \001(\0132\024.mcp.RootsCapability\022)\n\010sampli"
      "ng\030\003 \001(\0132\027.mcp.SamplingCapability\0323\n\021Exp"
      "erimentalEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\014:\0028\001\"\337\002\n\022ServerCapabilities\022\?\n\014experim"
      "ental\030\001 \003(\0132).mcp.ServerCapabilities.Exp"
      "erimentalEntry\022\'\n\007logging\030\002 \001(\0132\026.mcp.Lo"
      "ggingCapability\022/\n\013completions\030\003 \001(\0132\032.m"
      "cp.CompletionsCapability\022\'\n\007prompts\030\004 \001("
      "\0132\026.mcp.PromptsCapability\022+\n\tresources\030\005"
      " \001(\0132\030.mcp.ResourcesCapability\022#\n\005tools\030"
      "\006 \001(\0132\024.mcp.ToolsCapability\0323\n\021Experimen"
      "talEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001"
      "\"\'\n\017RootsCapability\022\024\n\014list_changed\030\001 \001("
      "\010\"\024\n\022SamplingCapability\"\023\n\021LoggingCapabi"
      "lity\"\027\n\025CompletionsCapability\")\n\021Prompts"
      "Capability\022\024\n\014list_changed\030\001 \001(\010\">\n\023Reso"
      "urcesCapability\022\021\n\tsubscribe\030\001 \001(\010\022\024\n\014li"
      "st_changed\030\002 \001(\010\"\'\n\017ToolsCapability\022\024\n\014l"
      "ist_changed\030\001 \001(\010\"\202\001\n\010Resource\022\013\n\003uri\030\001 "
      "\001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\021"
      "\n\tmime_type\030\004 \001(\t\022%\n\013annotations\030\005 \001(\0132\020"
      ".mcp.Annotations\022\014\n\004size\030\006 \001(\003\"\205\001\n\020Resou"
      "rceTemplate\022\024\n\014uri_template\030\001 \001(\t\022\014\n\004nam"
      "e\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\022\021\n\tmime_typ"
      "e\030\004 \001(\t\022%\n\013annotations\030\005 \001(\0132\020.mcp.Annot"
      "ations\"\223\001\n\020ResourceContents\022\013\n\003uri\030\001 \001(\t"
      "\022\021\n\tmime_type\030\002 \001(\t\022)\n\004text\030\003 \001(\0132\031.mcp."
      "TextResourceContentsH\000\022)\n\004blob\030\004 \001(\0132\031.m"
      "cp.BlobResourceContentsH\000B\t\n\007content\"$\n\024"
      "TextResourceContents\022\014\n\004text\030\001 \001(\t\"$\n\024Bl"
      "obResourceContents\022\014\n\004blob\030\001 \001(\014\"|\n\004Tool"
      "\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 \001(\t\022&\n\014i"
      "nput_schema\030\003 \001(\0132\020.mcp.InputSchema\022)\n\013a"
      "nnotations\030\004 \001(\0132\024.mcp.ToolAnnotations\"\226"
      "\001\n\013InputSchema\022\014\n\004type\030\001 \001(\t\0224\n\nproperti"
      "es\030\002 \003(\0132 .mcp.InputSchema.PropertiesEnt"
      "ry\022\020\n\010required\030\003 \003(\t\0321\n\017PropertiesEntry\022"
      "\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"\204\001\n\017Tool"
      "Annotations\022\r\n\005title\030\001 \001(\t\022\026\n\016read_only_"
      "hint\030\002 \001(\010\022\030\n\020destructive_hint\030\003 \001(\010\022\027\n\017"
      "idempotent_hint\030\004 \001(\010\022\027\n\017open_world_hint"
      "\030\005 \001(\010\"<\n\013Annotations\022\033\n\010audience\030\001 \003(\0162"
      "\t.mcp.Role\022\020\n\010priority\030\002 \001(\002\"P\n\013TextCont"
      "ent\022\014\n\004type\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022%\n\013annot"
      "ations\030\003 \001(\0132\020.mcp.Annotations\"d\n\014ImageC"
      "ontent\022\014\n\004type\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\022\021\n\tmi"
      "me_type\030\003 \001(\t\022%\n\013annotations\030\004 \001(\0132\020.mcp"
      ".Annotations\"d\n\014AudioContent\022\014\n\004type\030\001 \001"
      "(\t\022\014\n\004data\030\002 \001(\014\022\021\n\tmime_type\030\003 \001(\t\022%\n\013a"
      "nnotations\030\004 \001(\0132\020.mcp.Annotations\"\177\n\020Mo"
      "delPreferences\022\035\n\005hints\030\001 \003(\0132\016.mcp.Mode"
      "lHint\022\025\n\rcost_priority\030\002 \001(\002\022\026\n\016speed_pr"
      "iority\030\003 \001(\002\022\035\n\025intelligence_priority\030\004 "
      "\001(\002\"\031\n\tModelHint\022\014\n\004name\030\001 \001(\t\".\n\021Resour"
      "ceReference\022\014\n\004type\030\001 \001(\t\022\013\n\003uri\030\002 \001(\t\"-"
      "\n\017PromptReference\022\014\n\004type\030\001 \001(\t\022\014\n\004name\030"
      "\002 \001(\t\"!\n\004Root\022\013\n\003uri\030\001 \001(\t\022\014\n\004name\030\002 \001(\t"
      "\"J\n\021InitializeRequest\022\016\n\006method\030\001 \001(\t\022%\n"
      "\006params\030\002 \001(\0132\025.mcp.InitializeParams\"\205\001\n"
      "\020InitializeParams\022\030\n\020protocol_version\030\001 "
      "\001(\t\022-\n\014capabilities\030\002 \001(\0132\027.mcp.ClientCa"
      "pabilities\022(\n\013client_info\030\003 \001(\0132\023.mcp.Im"
      "plementation\"\233\001\n\020InitializeResult\022\030\n\020pro"
      "tocol_version\030\001 \001(\t\022-\n\014capabilities\030\002 \001("
      "\0132\027.mcp.ServerCapabilities\022(\n\013server_inf"
      "o\030\003 \001(\0132\023.mcp.Implementation\022\024\n\014instruct"
      "ions\030\004 \001(\t\"L\n\024ListResourcesRequest\022\016\n\006me"
      "thod\030\001 \001(\t\022$\n\006params\030\002 \001(\0132\024.mcp.Paginat"
      "edParams\"L\n\023ListResourcesResult\022 \n\tresou"
      "rces\030\001 \003(\0132\r.mcp.Resource\022\023\n\013next_cursor"
      "\030\002 \001(\t\"N\n\023ReadResourceRequest\022\016\n\006method\030"
      "\001 \001(\t\022\'\n\006params\030\002 \001(\0132\027.mcp.ReadResource"
      "Params\"!\n\022ReadResourceParams\022\013\n\003uri\030\001 \001("
      "\t\"=\n\022ReadResourceResult\022\'\n\010contents\030\001 \003("
      "\0132\025.mcp.ResourceContents\"!\n\017PaginatedPar"
      "ams\022\016\n\006cursor\030\001 \001(\t*\?\n\004Role\022\024\n\020ROLE_UNSP"
      "ECIFIED\020\000\022\r\n\tROLE_USER\020\001\022\022\n\016ROLE_ASSISTA"
      "NT\020\002*\376\001\n\014LoggingLevel\022\035\n\031LOGGING_LEVEL_U"
      "NSPECIFIED\020\000\022\027\n\023LOGGING_LEVEL_DEBUG\020\001\022\026\n"
      "\022LOGGING_LEVEL_INFO\020\002\022\030\n\024LOGGING_LEVEL_N"
      "OTICE\020\003\022\031\n\025LOGGING_LEVEL_WARNING\020\004\022\027\n\023LO"
      "GGING_LEVEL_ERROR\020\005\022\032\n\026LOGGING_LEVEL_CRI"
      "TICAL\020\006\022\027\n\023LOGGING_LEVEL_ALERT\020\007\022\033\n\027LOGG"
      "ING_LEVEL_EMERGENCY\020\010b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5149);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "mcp.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_mcp_2eproto
namespace mcp {
const ::google::protobuf::EnumDescriptor* Role_descriptor() {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mcp_2eproto::file_level_enum_descriptors[0];
}
bool Role_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoggingLevel_descriptor() {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_mcp_2eproto::file_level_enum_descriptors[1];
}
bool LoggingLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void JSONRPCMessage::InitAsDefaultInstance() {
  ::mcp::_JSONRPCMessage_default_instance_.request_ = const_cast< ::mcp::JSONRPCRequest*>(
      ::mcp::JSONRPCRequest::internal_default_instance());
  ::mcp::_JSONRPCMessage_default_instance_.notification_ = const_cast< ::mcp::JSONRPCNotification*>(
      ::mcp::JSONRPCNotification::internal_default_instance());
  ::mcp::_JSONRPCMessage_default_instance_.batch_request_ = const_cast< ::mcp::JSONRPCBatchRequest*>(
      ::mcp::JSONRPCBatchRequest::internal_default_instance());
  ::mcp::_JSONRPCMessage_default_instance_.response_ = const_cast< ::mcp::JSONRPCResponse*>(
      ::mcp::JSONRPCResponse::internal_default_instance());
  ::mcp::_JSONRPCMessage_default_instance_.error_ = const_cast< ::mcp::JSONRPCError*>(
      ::mcp::JSONRPCError::internal_default_instance());
  ::mcp::_JSONRPCMessage_default_instance_.batch_response_ = const_cast< ::mcp::JSONRPCBatchResponse*>(
      ::mcp::JSONRPCBatchResponse::internal_default_instance());
}
void JSONRPCMessage::set_allocated_request(::mcp::JSONRPCRequest* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    set_has_request();
    message_.request_ = request;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.request)
}
void JSONRPCMessage::set_allocated_notification(::mcp::JSONRPCNotification* notification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (notification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    set_has_notification();
    message_.notification_ = notification;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.notification)
}
void JSONRPCMessage::set_allocated_batch_request(::mcp::JSONRPCBatchRequest* batch_request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (batch_request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      batch_request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, batch_request, submessage_arena);
    }
    set_has_batch_request();
    message_.batch_request_ = batch_request;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.batch_request)
}
void JSONRPCMessage::set_allocated_response(::mcp::JSONRPCResponse* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    set_has_response();
    message_.response_ = response;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.response)
}
void JSONRPCMessage::set_allocated_error(::mcp::JSONRPCError* error) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    message_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.error)
}
void JSONRPCMessage::set_allocated_batch_response(::mcp::JSONRPCBatchResponse* batch_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_message();
  if (batch_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      batch_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, batch_response, submessage_arena);
    }
    set_has_batch_response();
    message_.batch_response_ = batch_response;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.JSONRPCMessage.batch_response)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCMessage::kRequestFieldNumber;
const int JSONRPCMessage::kNotificationFieldNumber;
const int JSONRPCMessage::kBatchRequestFieldNumber;
const int JSONRPCMessage::kResponseFieldNumber;
const int JSONRPCMessage::kErrorFieldNumber;
const int JSONRPCMessage::kBatchResponseFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCMessage::JSONRPCMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCMessage)
}
JSONRPCMessage::JSONRPCMessage(const JSONRPCMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_message();
  switch (from.message_case()) {
    case kRequest: {
      mutable_request()->::mcp::JSONRPCRequest::MergeFrom(from.request());
      break;
    }
    case kNotification: {
      mutable_notification()->::mcp::JSONRPCNotification::MergeFrom(from.notification());
      break;
    }
    case kBatchRequest: {
      mutable_batch_request()->::mcp::JSONRPCBatchRequest::MergeFrom(from.batch_request());
      break;
    }
    case kResponse: {
      mutable_response()->::mcp::JSONRPCResponse::MergeFrom(from.response());
      break;
    }
    case kError: {
      mutable_error()->::mcp::JSONRPCError::MergeFrom(from.error());
      break;
    }
    case kBatchResponse: {
      mutable_batch_response()->::mcp::JSONRPCBatchResponse::MergeFrom(from.batch_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCMessage)
}

void JSONRPCMessage::SharedCtor() {
  clear_has_message();
}

JSONRPCMessage::~JSONRPCMessage() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCMessage)
  SharedDtor();
}

void JSONRPCMessage::SharedDtor() {
  if (has_message()) {
    clear_message();
  }
}

void JSONRPCMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCMessage::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCMessage& JSONRPCMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCMessage.base);
  return *internal_default_instance();
}


void JSONRPCMessage::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:mcp.JSONRPCMessage)
  switch (message_case()) {
    case kRequest: {
      delete message_.request_;
      break;
    }
    case kNotification: {
      delete message_.notification_;
      break;
    }
    case kBatchRequest: {
      delete message_.batch_request_;
      break;
    }
    case kResponse: {
      delete message_.response_;
      break;
    }
    case kError: {
      delete message_.error_;
      break;
    }
    case kBatchResponse: {
      delete message_.batch_response_;
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void JSONRPCMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_message();
  _internal_metadata_.Clear();
}

bool JSONRPCMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mcp.JSONRPCRequest request = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.JSONRPCNotification notification = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.JSONRPCBatchRequest batch_request = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.JSONRPCResponse response = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.JSONRPCError error = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.JSONRPCBatchResponse batch_response = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_batch_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCMessage)
  return false;
#undef DO_
}

void JSONRPCMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.JSONRPCRequest request = 1;
  if (has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_request(), output);
  }

  // .mcp.JSONRPCNotification notification = 2;
  if (has_notification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_notification(), output);
  }

  // .mcp.JSONRPCBatchRequest batch_request = 3;
  if (has_batch_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_batch_request(), output);
  }

  // .mcp.JSONRPCResponse response = 4;
  if (has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_response(), output);
  }

  // .mcp.JSONRPCError error = 5;
  if (has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_error(), output);
  }

  // .mcp.JSONRPCBatchResponse batch_response = 6;
  if (has_batch_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_batch_response(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCMessage)
}

::google::protobuf::uint8* JSONRPCMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.JSONRPCRequest request = 1;
  if (has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_request(), deterministic, target);
  }

  // .mcp.JSONRPCNotification notification = 2;
  if (has_notification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_notification(), deterministic, target);
  }

  // .mcp.JSONRPCBatchRequest batch_request = 3;
  if (has_batch_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_batch_request(), deterministic, target);
  }

  // .mcp.JSONRPCResponse response = 4;
  if (has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_response(), deterministic, target);
  }

  // .mcp.JSONRPCError error = 5;
  if (has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_error(), deterministic, target);
  }

  // .mcp.JSONRPCBatchResponse batch_response = 6;
  if (has_batch_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_batch_response(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCMessage)
  return target;
}

size_t JSONRPCMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (message_case()) {
    // .mcp.JSONRPCRequest request = 1;
    case kRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.request_);
      break;
    }
    // .mcp.JSONRPCNotification notification = 2;
    case kNotification: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.notification_);
      break;
    }
    // .mcp.JSONRPCBatchRequest batch_request = 3;
    case kBatchRequest: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.batch_request_);
      break;
    }
    // .mcp.JSONRPCResponse response = 4;
    case kResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.response_);
      break;
    }
    // .mcp.JSONRPCError error = 5;
    case kError: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.error_);
      break;
    }
    // .mcp.JSONRPCBatchResponse batch_response = 6;
    case kBatchResponse: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *message_.batch_response_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCMessage)
    MergeFrom(*source);
  }
}

void JSONRPCMessage::MergeFrom(const JSONRPCMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.message_case()) {
    case kRequest: {
      mutable_request()->::mcp::JSONRPCRequest::MergeFrom(from.request());
      break;
    }
    case kNotification: {
      mutable_notification()->::mcp::JSONRPCNotification::MergeFrom(from.notification());
      break;
    }
    case kBatchRequest: {
      mutable_batch_request()->::mcp::JSONRPCBatchRequest::MergeFrom(from.batch_request());
      break;
    }
    case kResponse: {
      mutable_response()->::mcp::JSONRPCResponse::MergeFrom(from.response());
      break;
    }
    case kError: {
      mutable_error()->::mcp::JSONRPCError::MergeFrom(from.error());
      break;
    }
    case kBatchResponse: {
      mutable_batch_response()->::mcp::JSONRPCBatchResponse::MergeFrom(from.batch_response());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void JSONRPCMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCMessage::CopyFrom(const JSONRPCMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCMessage::IsInitialized() const {
  return true;
}

void JSONRPCMessage::Swap(JSONRPCMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCMessage::InternalSwap(JSONRPCMessage* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCMessage::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCRequest::InitAsDefaultInstance() {
  ::mcp::_JSONRPCRequest_default_instance_._instance.get_mutable()->params_ = const_cast< ::mcp::RequestParams*>(
      ::mcp::RequestParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCRequest::kJsonrpcFieldNumber;
const int JSONRPCRequest::kIdFieldNumber;
const int JSONRPCRequest::kMethodFieldNumber;
const int JSONRPCRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCRequest::JSONRPCRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCRequest)
}
JSONRPCRequest::JSONRPCRequest(const JSONRPCRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jsonrpc().size() > 0) {
    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    params_ = new ::mcp::RequestParams(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCRequest)
}

void JSONRPCRequest::SharedCtor() {
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

JSONRPCRequest::~JSONRPCRequest() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCRequest)
  SharedDtor();
}

void JSONRPCRequest::SharedDtor() {
  jsonrpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void JSONRPCRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCRequest::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCRequest& JSONRPCRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCRequest.base);
  return *internal_default_instance();
}


void JSONRPCRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonrpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONRPCRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jsonrpc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonrpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCRequest.jsonrpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.RequestParams params = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCRequest)
  return false;
#undef DO_
}

void JSONRPCRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.jsonrpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jsonrpc(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method(), output);
  }

  // .mcp.RequestParams params = 4;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCRequest)
}

::google::protobuf::uint8* JSONRPCRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.jsonrpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jsonrpc(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method(), target);
  }

  // .mcp.RequestParams params = 4;
  if (this->has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCRequest)
  return target;
}

size_t JSONRPCRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jsonrpc());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .mcp.RequestParams params = 4;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCRequest)
    MergeFrom(*source);
  }
}

void JSONRPCRequest::MergeFrom(const JSONRPCRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jsonrpc().size() > 0) {

    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    mutable_params()->::mcp::RequestParams::MergeFrom(from.params());
  }
}

void JSONRPCRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCRequest::CopyFrom(const JSONRPCRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCRequest::IsInitialized() const {
  return true;
}

void JSONRPCRequest::Swap(JSONRPCRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCRequest::InternalSwap(JSONRPCRequest* other) {
  using std::swap;
  jsonrpc_.Swap(&other->jsonrpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCRequest::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCNotification::InitAsDefaultInstance() {
  ::mcp::_JSONRPCNotification_default_instance_._instance.get_mutable()->params_ = const_cast< ::mcp::NotificationParams*>(
      ::mcp::NotificationParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCNotification::kJsonrpcFieldNumber;
const int JSONRPCNotification::kMethodFieldNumber;
const int JSONRPCNotification::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCNotification::JSONRPCNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCNotification.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCNotification)
}
JSONRPCNotification::JSONRPCNotification(const JSONRPCNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jsonrpc().size() > 0) {
    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    params_ = new ::mcp::NotificationParams(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCNotification)
}

void JSONRPCNotification::SharedCtor() {
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

JSONRPCNotification::~JSONRPCNotification() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCNotification)
  SharedDtor();
}

void JSONRPCNotification::SharedDtor() {
  jsonrpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void JSONRPCNotification::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCNotification::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCNotification& JSONRPCNotification::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCNotification.base);
  return *internal_default_instance();
}


void JSONRPCNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonrpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONRPCNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCNotification)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jsonrpc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonrpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCNotification.jsonrpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCNotification.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.NotificationParams params = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCNotification)
  return false;
#undef DO_
}

void JSONRPCNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCNotification.jsonrpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jsonrpc(), output);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCNotification.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->method(), output);
  }

  // .mcp.NotificationParams params = 3;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCNotification)
}

::google::protobuf::uint8* JSONRPCNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCNotification.jsonrpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jsonrpc(), target);
  }

  // string method = 2;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCNotification.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->method(), target);
  }

  // .mcp.NotificationParams params = 3;
  if (this->has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCNotification)
  return target;
}

size_t JSONRPCNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jsonrpc());
  }

  // string method = 2;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .mcp.NotificationParams params = 3;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCNotification)
    MergeFrom(*source);
  }
}

void JSONRPCNotification::MergeFrom(const JSONRPCNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jsonrpc().size() > 0) {

    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    mutable_params()->::mcp::NotificationParams::MergeFrom(from.params());
  }
}

void JSONRPCNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCNotification::CopyFrom(const JSONRPCNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCNotification::IsInitialized() const {
  return true;
}

void JSONRPCNotification::Swap(JSONRPCNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCNotification::InternalSwap(JSONRPCNotification* other) {
  using std::swap;
  jsonrpc_.Swap(&other->jsonrpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCNotification::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCResponse::InitAsDefaultInstance() {
  ::mcp::_JSONRPCResponse_default_instance_._instance.get_mutable()->result_ = const_cast< ::mcp::Result*>(
      ::mcp::Result::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCResponse::kJsonrpcFieldNumber;
const int JSONRPCResponse::kIdFieldNumber;
const int JSONRPCResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCResponse::JSONRPCResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCResponse)
}
JSONRPCResponse::JSONRPCResponse(const JSONRPCResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jsonrpc().size() > 0) {
    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_result()) {
    result_ = new ::mcp::Result(*from.result_);
  } else {
    result_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCResponse)
}

void JSONRPCResponse::SharedCtor() {
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = NULL;
}

JSONRPCResponse::~JSONRPCResponse() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCResponse)
  SharedDtor();
}

void JSONRPCResponse::SharedDtor() {
  jsonrpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete result_;
}

void JSONRPCResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCResponse::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCResponse& JSONRPCResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCResponse.base);
  return *internal_default_instance();
}


void JSONRPCResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonrpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && result_ != NULL) {
    delete result_;
  }
  result_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONRPCResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jsonrpc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonrpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCResponse.jsonrpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCResponse.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Result result = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCResponse)
  return false;
#undef DO_
}

void JSONRPCResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCResponse.jsonrpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jsonrpc(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCResponse.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // .mcp.Result result = 3;
  if (this->has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCResponse)
}

::google::protobuf::uint8* JSONRPCResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCResponse.jsonrpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jsonrpc(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCResponse.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // .mcp.Result result = 3;
  if (this->has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_result(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCResponse)
  return target;
}

size_t JSONRPCResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jsonrpc());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .mcp.Result result = 3;
  if (this->has_result()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *result_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCResponse)
    MergeFrom(*source);
  }
}

void JSONRPCResponse::MergeFrom(const JSONRPCResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jsonrpc().size() > 0) {

    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_result()) {
    mutable_result()->::mcp::Result::MergeFrom(from.result());
  }
}

void JSONRPCResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCResponse::CopyFrom(const JSONRPCResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCResponse::IsInitialized() const {
  return true;
}

void JSONRPCResponse::Swap(JSONRPCResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCResponse::InternalSwap(JSONRPCResponse* other) {
  using std::swap;
  jsonrpc_.Swap(&other->jsonrpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCResponse::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCError::InitAsDefaultInstance() {
  ::mcp::_JSONRPCError_default_instance_._instance.get_mutable()->error_ = const_cast< ::mcp::Error*>(
      ::mcp::Error::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCError::kJsonrpcFieldNumber;
const int JSONRPCError::kIdFieldNumber;
const int JSONRPCError::kErrorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCError::JSONRPCError()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCError.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCError)
}
JSONRPCError::JSONRPCError(const JSONRPCError& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.jsonrpc().size() > 0) {
    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_error()) {
    error_ = new ::mcp::Error(*from.error_);
  } else {
    error_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCError)
}

void JSONRPCError::SharedCtor() {
  jsonrpc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  error_ = NULL;
}

JSONRPCError::~JSONRPCError() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCError)
  SharedDtor();
}

void JSONRPCError::SharedDtor() {
  jsonrpc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete error_;
}

void JSONRPCError::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCError::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCError& JSONRPCError::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCError.base);
  return *internal_default_instance();
}


void JSONRPCError::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  jsonrpc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && error_ != NULL) {
    delete error_;
  }
  error_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONRPCError::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCError)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string jsonrpc = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_jsonrpc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCError.jsonrpc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.JSONRPCError.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Error error = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_error()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCError)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCError)
  return false;
#undef DO_
}

void JSONRPCError::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCError.jsonrpc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->jsonrpc(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCError.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  // .mcp.Error error = 3;
  if (this->has_error()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_error(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCError)
}

::google::protobuf::uint8* JSONRPCError::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCError)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->jsonrpc().data(), static_cast<int>(this->jsonrpc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCError.jsonrpc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->jsonrpc(), target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.JSONRPCError.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  // .mcp.Error error = 3;
  if (this->has_error()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_error(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCError)
  return target;
}

size_t JSONRPCError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCError)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string jsonrpc = 1;
  if (this->jsonrpc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->jsonrpc());
  }

  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .mcp.Error error = 3;
  if (this->has_error()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *error_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCError::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCError)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCError* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCError>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCError)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCError)
    MergeFrom(*source);
  }
}

void JSONRPCError::MergeFrom(const JSONRPCError& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCError)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.jsonrpc().size() > 0) {

    jsonrpc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.jsonrpc_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_error()) {
    mutable_error()->::mcp::Error::MergeFrom(from.error());
  }
}

void JSONRPCError::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCError::CopyFrom(const JSONRPCError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCError::IsInitialized() const {
  return true;
}

void JSONRPCError::Swap(JSONRPCError* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCError::InternalSwap(JSONRPCError* other) {
  using std::swap;
  jsonrpc_.Swap(&other->jsonrpc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(error_, other->error_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCError::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCBatchRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCBatchRequest::kRequestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCBatchRequest::JSONRPCBatchRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCBatchRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCBatchRequest)
}
JSONRPCBatchRequest::JSONRPCBatchRequest(const JSONRPCBatchRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      requests_(from.requests_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCBatchRequest)
}

void JSONRPCBatchRequest::SharedCtor() {
}

JSONRPCBatchRequest::~JSONRPCBatchRequest() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCBatchRequest)
  SharedDtor();
}

void JSONRPCBatchRequest::SharedDtor() {
}

void JSONRPCBatchRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCBatchRequest::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCBatchRequest& JSONRPCBatchRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCBatchRequest.base);
  return *internal_default_instance();
}


void JSONRPCBatchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCBatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  requests_.Clear();
  _internal_metadata_.Clear();
}

bool JSONRPCBatchRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCBatchRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.JSONRPCRequest requests = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_requests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCBatchRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCBatchRequest)
  return false;
#undef DO_
}

void JSONRPCBatchRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCBatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.JSONRPCRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->requests(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCBatchRequest)
}

::google::protobuf::uint8* JSONRPCBatchRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCBatchRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.JSONRPCRequest requests = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->requests_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->requests(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCBatchRequest)
  return target;
}

size_t JSONRPCBatchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCBatchRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.JSONRPCRequest requests = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->requests_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->requests(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCBatchRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCBatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCBatchRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCBatchRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCBatchRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCBatchRequest)
    MergeFrom(*source);
  }
}

void JSONRPCBatchRequest::MergeFrom(const JSONRPCBatchRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCBatchRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  requests_.MergeFrom(from.requests_);
}

void JSONRPCBatchRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCBatchRequest::CopyFrom(const JSONRPCBatchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCBatchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCBatchRequest::IsInitialized() const {
  return true;
}

void JSONRPCBatchRequest::Swap(JSONRPCBatchRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCBatchRequest::InternalSwap(JSONRPCBatchRequest* other) {
  using std::swap;
  CastToBase(&requests_)->InternalSwap(CastToBase(&other->requests_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCBatchRequest::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONRPCBatchResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONRPCBatchResponse::kResponsesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONRPCBatchResponse::JSONRPCBatchResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_JSONRPCBatchResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.JSONRPCBatchResponse)
}
JSONRPCBatchResponse::JSONRPCBatchResponse(const JSONRPCBatchResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      responses_(from.responses_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.JSONRPCBatchResponse)
}

void JSONRPCBatchResponse::SharedCtor() {
}

JSONRPCBatchResponse::~JSONRPCBatchResponse() {
  // @@protoc_insertion_point(destructor:mcp.JSONRPCBatchResponse)
  SharedDtor();
}

void JSONRPCBatchResponse::SharedDtor() {
}

void JSONRPCBatchResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONRPCBatchResponse::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONRPCBatchResponse& JSONRPCBatchResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_JSONRPCBatchResponse.base);
  return *internal_default_instance();
}


void JSONRPCBatchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.JSONRPCBatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  responses_.Clear();
  _internal_metadata_.Clear();
}

bool JSONRPCBatchResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.JSONRPCBatchResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.JSONRPCResponse responses = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_responses()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.JSONRPCBatchResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.JSONRPCBatchResponse)
  return false;
#undef DO_
}

void JSONRPCBatchResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.JSONRPCBatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.JSONRPCResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->responses(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.JSONRPCBatchResponse)
}

::google::protobuf::uint8* JSONRPCBatchResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.JSONRPCBatchResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.JSONRPCResponse responses = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->responses_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->responses(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.JSONRPCBatchResponse)
  return target;
}

size_t JSONRPCBatchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.JSONRPCBatchResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.JSONRPCResponse responses = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->responses_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->responses(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONRPCBatchResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.JSONRPCBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONRPCBatchResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONRPCBatchResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.JSONRPCBatchResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.JSONRPCBatchResponse)
    MergeFrom(*source);
  }
}

void JSONRPCBatchResponse::MergeFrom(const JSONRPCBatchResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.JSONRPCBatchResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  responses_.MergeFrom(from.responses_);
}

void JSONRPCBatchResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.JSONRPCBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONRPCBatchResponse::CopyFrom(const JSONRPCBatchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.JSONRPCBatchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONRPCBatchResponse::IsInitialized() const {
  return true;
}

void JSONRPCBatchResponse::Swap(JSONRPCBatchResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONRPCBatchResponse::InternalSwap(JSONRPCBatchResponse* other) {
  using std::swap;
  CastToBase(&responses_)->InternalSwap(CastToBase(&other->responses_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONRPCBatchResponse::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

RequestParams_AdditionalParamsEntry_DoNotUse::RequestParams_AdditionalParamsEntry_DoNotUse() {}
RequestParams_AdditionalParamsEntry_DoNotUse::RequestParams_AdditionalParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void RequestParams_AdditionalParamsEntry_DoNotUse::MergeFrom(const RequestParams_AdditionalParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata RequestParams_AdditionalParamsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[7];
}
void RequestParams_AdditionalParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void RequestParams::InitAsDefaultInstance() {
  ::mcp::_RequestParams_default_instance_._instance.get_mutable()->_meta_ = const_cast< ::mcp::MetaParams*>(
      ::mcp::MetaParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RequestParams::kMetaFieldNumber;
const int RequestParams::kAdditionalParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RequestParams::RequestParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_RequestParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.RequestParams)
}
RequestParams::RequestParams(const RequestParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  additional_params_.MergeFrom(from.additional_params_);
  if (from.has__meta()) {
    _meta_ = new ::mcp::MetaParams(*from._meta_);
  } else {
    _meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.RequestParams)
}

void RequestParams::SharedCtor() {
  _meta_ = NULL;
}

RequestParams::~RequestParams() {
  // @@protoc_insertion_point(destructor:mcp.RequestParams)
  SharedDtor();
}

void RequestParams::SharedDtor() {
  if (this != internal_default_instance()) delete _meta_;
}

void RequestParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RequestParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RequestParams& RequestParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_RequestParams.base);
  return *internal_default_instance();
}


void RequestParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.RequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_params_.Clear();
  if (GetArenaNoVirtual() == NULL && _meta_ != NULL) {
    delete _meta_;
  }
  _meta_ = NULL;
  _internal_metadata_.Clear();
}

bool RequestParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.RequestParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mcp.MetaParams _meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> additional_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          RequestParams_AdditionalParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              RequestParams_AdditionalParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&additional_params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.RequestParams.AdditionalParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.RequestParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.RequestParams)
  return false;
#undef DO_
}

void RequestParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.RequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal__meta(), output);
  }

  // map<string, bytes> additional_params = 2;
  if (!this->additional_params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.RequestParams.AdditionalParamsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->additional_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RequestParams_AdditionalParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RequestParams_AdditionalParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it) {
        entry.reset(additional_params_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.RequestParams)
}

::google::protobuf::uint8* RequestParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.RequestParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal__meta(), deterministic, target);
  }

  // map<string, bytes> additional_params = 2;
  if (!this->additional_params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.RequestParams.AdditionalParamsEntry.key");
      }
    };

    if (deterministic &&
        this->additional_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<RequestParams_AdditionalParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<RequestParams_AdditionalParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it) {
        entry.reset(additional_params_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.RequestParams)
  return target;
}

size_t RequestParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.RequestParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> additional_params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_params_size());
  {
    ::std::unique_ptr<RequestParams_AdditionalParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->additional_params().begin();
        it != this->additional_params().end(); ++it) {
      entry.reset(additional_params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RequestParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.RequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  const RequestParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RequestParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.RequestParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.RequestParams)
    MergeFrom(*source);
  }
}

void RequestParams::MergeFrom(const RequestParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.RequestParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_params_.MergeFrom(from.additional_params_);
  if (from.has__meta()) {
    mutable__meta()->::mcp::MetaParams::MergeFrom(from._meta());
  }
}

void RequestParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.RequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RequestParams::CopyFrom(const RequestParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.RequestParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestParams::IsInitialized() const {
  return true;
}

void RequestParams::Swap(RequestParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RequestParams::InternalSwap(RequestParams* other) {
  using std::swap;
  additional_params_.Swap(&other->additional_params_);
  swap(_meta_, other->_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RequestParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

NotificationParams_AdditionalParamsEntry_DoNotUse::NotificationParams_AdditionalParamsEntry_DoNotUse() {}
NotificationParams_AdditionalParamsEntry_DoNotUse::NotificationParams_AdditionalParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void NotificationParams_AdditionalParamsEntry_DoNotUse::MergeFrom(const NotificationParams_AdditionalParamsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata NotificationParams_AdditionalParamsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[9];
}
void NotificationParams_AdditionalParamsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void NotificationParams::InitAsDefaultInstance() {
  ::mcp::_NotificationParams_default_instance_._instance.get_mutable()->_meta_ = const_cast< ::mcp::MetaParams*>(
      ::mcp::MetaParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NotificationParams::kMetaFieldNumber;
const int NotificationParams::kAdditionalParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NotificationParams::NotificationParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_NotificationParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.NotificationParams)
}
NotificationParams::NotificationParams(const NotificationParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  additional_params_.MergeFrom(from.additional_params_);
  if (from.has__meta()) {
    _meta_ = new ::mcp::MetaParams(*from._meta_);
  } else {
    _meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.NotificationParams)
}

void NotificationParams::SharedCtor() {
  _meta_ = NULL;
}

NotificationParams::~NotificationParams() {
  // @@protoc_insertion_point(destructor:mcp.NotificationParams)
  SharedDtor();
}

void NotificationParams::SharedDtor() {
  if (this != internal_default_instance()) delete _meta_;
}

void NotificationParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NotificationParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NotificationParams& NotificationParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_NotificationParams.base);
  return *internal_default_instance();
}


void NotificationParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.NotificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_params_.Clear();
  if (GetArenaNoVirtual() == NULL && _meta_ != NULL) {
    delete _meta_;
  }
  _meta_ = NULL;
  _internal_metadata_.Clear();
}

bool NotificationParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.NotificationParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mcp.MetaParams _meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> additional_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          NotificationParams_AdditionalParamsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              NotificationParams_AdditionalParamsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&additional_params_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.NotificationParams.AdditionalParamsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.NotificationParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.NotificationParams)
  return false;
#undef DO_
}

void NotificationParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.NotificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal__meta(), output);
  }

  // map<string, bytes> additional_params = 2;
  if (!this->additional_params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.NotificationParams.AdditionalParamsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->additional_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NotificationParams_AdditionalParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<NotificationParams_AdditionalParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it) {
        entry.reset(additional_params_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.NotificationParams)
}

::google::protobuf::uint8* NotificationParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.NotificationParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal__meta(), deterministic, target);
  }

  // map<string, bytes> additional_params = 2;
  if (!this->additional_params().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.NotificationParams.AdditionalParamsEntry.key");
      }
    };

    if (deterministic &&
        this->additional_params().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_params().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<NotificationParams_AdditionalParamsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_params_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<NotificationParams_AdditionalParamsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_params().begin();
          it != this->additional_params().end(); ++it) {
        entry.reset(additional_params_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.NotificationParams)
  return target;
}

size_t NotificationParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.NotificationParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> additional_params = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_params_size());
  {
    ::std::unique_ptr<NotificationParams_AdditionalParamsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->additional_params().begin();
        it != this->additional_params().end(); ++it) {
      entry.reset(additional_params_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .mcp.MetaParams _meta = 1;
  if (this->has__meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.NotificationParams)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NotificationParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.NotificationParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.NotificationParams)
    MergeFrom(*source);
  }
}

void NotificationParams::MergeFrom(const NotificationParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.NotificationParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_params_.MergeFrom(from.additional_params_);
  if (from.has__meta()) {
    mutable__meta()->::mcp::MetaParams::MergeFrom(from._meta());
  }
}

void NotificationParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.NotificationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationParams::CopyFrom(const NotificationParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.NotificationParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationParams::IsInitialized() const {
  return true;
}

void NotificationParams::Swap(NotificationParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NotificationParams::InternalSwap(NotificationParams* other) {
  using std::swap;
  additional_params_.Swap(&other->additional_params_);
  swap(_meta_, other->_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NotificationParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MetaParams_AdditionalMetaEntry_DoNotUse::MetaParams_AdditionalMetaEntry_DoNotUse() {}
MetaParams_AdditionalMetaEntry_DoNotUse::MetaParams_AdditionalMetaEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MetaParams_AdditionalMetaEntry_DoNotUse::MergeFrom(const MetaParams_AdditionalMetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MetaParams_AdditionalMetaEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[11];
}
void MetaParams_AdditionalMetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void MetaParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaParams::kProgressTokenFieldNumber;
const int MetaParams::kAdditionalMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaParams::MetaParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_MetaParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.MetaParams)
}
MetaParams::MetaParams(const MetaParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  additional_meta_.MergeFrom(from.additional_meta_);
  progress_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.progress_token().size() > 0) {
    progress_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_token_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.MetaParams)
}

void MetaParams::SharedCtor() {
  progress_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MetaParams::~MetaParams() {
  // @@protoc_insertion_point(destructor:mcp.MetaParams)
  SharedDtor();
}

void MetaParams::SharedDtor() {
  progress_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MetaParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetaParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetaParams& MetaParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_MetaParams.base);
  return *internal_default_instance();
}


void MetaParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.MetaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_meta_.Clear();
  progress_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool MetaParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.MetaParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string progress_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_progress_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->progress_token().data(), static_cast<int>(this->progress_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.MetaParams.progress_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> additional_meta = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          MetaParams_AdditionalMetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MetaParams_AdditionalMetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&additional_meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.MetaParams.AdditionalMetaEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.MetaParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.MetaParams)
  return false;
#undef DO_
}

void MetaParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.MetaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string progress_token = 1;
  if (this->progress_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_token().data(), static_cast<int>(this->progress_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.MetaParams.progress_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->progress_token(), output);
  }

  // map<string, bytes> additional_meta = 2;
  if (!this->additional_meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.MetaParams.AdditionalMetaEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->additional_meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaParams_AdditionalMetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_meta_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MetaParams_AdditionalMetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it) {
        entry.reset(additional_meta_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.MetaParams)
}

::google::protobuf::uint8* MetaParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.MetaParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string progress_token = 1;
  if (this->progress_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->progress_token().data(), static_cast<int>(this->progress_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.MetaParams.progress_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->progress_token(), target);
  }

  // map<string, bytes> additional_meta = 2;
  if (!this->additional_meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.MetaParams.AdditionalMetaEntry.key");
      }
    };

    if (deterministic &&
        this->additional_meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaParams_AdditionalMetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_meta_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MetaParams_AdditionalMetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it) {
        entry.reset(additional_meta_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.MetaParams)
  return target;
}

size_t MetaParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.MetaParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> additional_meta = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_meta_size());
  {
    ::std::unique_ptr<MetaParams_AdditionalMetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->additional_meta().begin();
        it != this->additional_meta().end(); ++it) {
      entry.reset(additional_meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string progress_token = 1;
  if (this->progress_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->progress_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetaParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.MetaParams)
  GOOGLE_DCHECK_NE(&from, this);
  const MetaParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetaParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.MetaParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.MetaParams)
    MergeFrom(*source);
  }
}

void MetaParams::MergeFrom(const MetaParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.MetaParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_meta_.MergeFrom(from.additional_meta_);
  if (from.progress_token().size() > 0) {

    progress_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.progress_token_);
  }
}

void MetaParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.MetaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaParams::CopyFrom(const MetaParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.MetaParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaParams::IsInitialized() const {
  return true;
}

void MetaParams::Swap(MetaParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaParams::InternalSwap(MetaParams* other) {
  using std::swap;
  additional_meta_.Swap(&other->additional_meta_);
  progress_token_.Swap(&other->progress_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetaParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Result_AdditionalResultEntry_DoNotUse::Result_AdditionalResultEntry_DoNotUse() {}
Result_AdditionalResultEntry_DoNotUse::Result_AdditionalResultEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Result_AdditionalResultEntry_DoNotUse::MergeFrom(const Result_AdditionalResultEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Result_AdditionalResultEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[13];
}
void Result_AdditionalResultEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Result::InitAsDefaultInstance() {
  ::mcp::_Result_default_instance_._instance.get_mutable()->_meta_ = const_cast< ::mcp::MetaResult*>(
      ::mcp::MetaResult::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Result::kMetaFieldNumber;
const int Result::kAdditionalResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Result::Result()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Result.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Result)
}
Result::Result(const Result& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  additional_result_.MergeFrom(from.additional_result_);
  if (from.has__meta()) {
    _meta_ = new ::mcp::MetaResult(*from._meta_);
  } else {
    _meta_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.Result)
}

void Result::SharedCtor() {
  _meta_ = NULL;
}

Result::~Result() {
  // @@protoc_insertion_point(destructor:mcp.Result)
  SharedDtor();
}

void Result::SharedDtor() {
  if (this != internal_default_instance()) delete _meta_;
}

void Result::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Result::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Result& Result::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Result.base);
  return *internal_default_instance();
}


void Result::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_result_.Clear();
  if (GetArenaNoVirtual() == NULL && _meta_ != NULL) {
    delete _meta_;
  }
  _meta_ = NULL;
  _internal_metadata_.Clear();
}

bool Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Result)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .mcp.MetaResult _meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable__meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> additional_result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          Result_AdditionalResultEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Result_AdditionalResultEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&additional_result_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Result.AdditionalResultEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Result)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Result)
  return false;
#undef DO_
}

void Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaResult _meta = 1;
  if (this->has__meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal__meta(), output);
  }

  // map<string, bytes> additional_result = 2;
  if (!this->additional_result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.Result.AdditionalResultEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->additional_result().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_result().begin();
          it != this->additional_result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Result_AdditionalResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_result_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Result_AdditionalResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_result().begin();
          it != this->additional_result().end(); ++it) {
        entry.reset(additional_result_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Result)
}

::google::protobuf::uint8* Result::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Result)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .mcp.MetaResult _meta = 1;
  if (this->has__meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal__meta(), deterministic, target);
  }

  // map<string, bytes> additional_result = 2;
  if (!this->additional_result().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.Result.AdditionalResultEntry.key");
      }
    };

    if (deterministic &&
        this->additional_result().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_result().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_result().begin();
          it != this->additional_result().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Result_AdditionalResultEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_result_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Result_AdditionalResultEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_result().begin();
          it != this->additional_result().end(); ++it) {
        entry.reset(additional_result_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Result)
  return target;
}

size_t Result::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Result)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> additional_result = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_result_size());
  {
    ::std::unique_ptr<Result_AdditionalResultEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->additional_result().begin();
        it != this->additional_result().end(); ++it) {
      entry.reset(additional_result_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .mcp.MetaResult _meta = 1;
  if (this->has__meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *_meta_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Result::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Result)
  GOOGLE_DCHECK_NE(&from, this);
  const Result* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Result>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Result)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Result)
    MergeFrom(*source);
  }
}

void Result::MergeFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Result)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_result_.MergeFrom(from.additional_result_);
  if (from.has__meta()) {
    mutable__meta()->::mcp::MetaResult::MergeFrom(from._meta());
  }
}

void Result::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Result::CopyFrom(const Result& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Result)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Result::IsInitialized() const {
  return true;
}

void Result::Swap(Result* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Result::InternalSwap(Result* other) {
  using std::swap;
  additional_result_.Swap(&other->additional_result_);
  swap(_meta_, other->_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Result::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

MetaResult_AdditionalMetaEntry_DoNotUse::MetaResult_AdditionalMetaEntry_DoNotUse() {}
MetaResult_AdditionalMetaEntry_DoNotUse::MetaResult_AdditionalMetaEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void MetaResult_AdditionalMetaEntry_DoNotUse::MergeFrom(const MetaResult_AdditionalMetaEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata MetaResult_AdditionalMetaEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[15];
}
void MetaResult_AdditionalMetaEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void MetaResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MetaResult::kAdditionalMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MetaResult::MetaResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_MetaResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.MetaResult)
}
MetaResult::MetaResult(const MetaResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  additional_meta_.MergeFrom(from.additional_meta_);
  // @@protoc_insertion_point(copy_constructor:mcp.MetaResult)
}

void MetaResult::SharedCtor() {
}

MetaResult::~MetaResult() {
  // @@protoc_insertion_point(destructor:mcp.MetaResult)
  SharedDtor();
}

void MetaResult::SharedDtor() {
}

void MetaResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MetaResult::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MetaResult& MetaResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_MetaResult.base);
  return *internal_default_instance();
}


void MetaResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.MetaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  additional_meta_.Clear();
  _internal_metadata_.Clear();
}

bool MetaResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.MetaResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> additional_meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          MetaResult_AdditionalMetaEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              MetaResult_AdditionalMetaEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&additional_meta_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.MetaResult.AdditionalMetaEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.MetaResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.MetaResult)
  return false;
#undef DO_
}

void MetaResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.MetaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> additional_meta = 1;
  if (!this->additional_meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.MetaResult.AdditionalMetaEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->additional_meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaResult_AdditionalMetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_meta_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MetaResult_AdditionalMetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it) {
        entry.reset(additional_meta_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.MetaResult)
}

::google::protobuf::uint8* MetaResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.MetaResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> additional_meta = 1;
  if (!this->additional_meta().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.MetaResult.AdditionalMetaEntry.key");
      }
    };

    if (deterministic &&
        this->additional_meta().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->additional_meta().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<MetaResult_AdditionalMetaEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(additional_meta_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<MetaResult_AdditionalMetaEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->additional_meta().begin();
          it != this->additional_meta().end(); ++it) {
        entry.reset(additional_meta_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.MetaResult)
  return target;
}

size_t MetaResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.MetaResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> additional_meta = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->additional_meta_size());
  {
    ::std::unique_ptr<MetaResult_AdditionalMetaEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->additional_meta().begin();
        it != this->additional_meta().end(); ++it) {
      entry.reset(additional_meta_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MetaResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.MetaResult)
  GOOGLE_DCHECK_NE(&from, this);
  const MetaResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MetaResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.MetaResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.MetaResult)
    MergeFrom(*source);
  }
}

void MetaResult::MergeFrom(const MetaResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.MetaResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  additional_meta_.MergeFrom(from.additional_meta_);
}

void MetaResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.MetaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MetaResult::CopyFrom(const MetaResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.MetaResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaResult::IsInitialized() const {
  return true;
}

void MetaResult::Swap(MetaResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MetaResult::InternalSwap(MetaResult* other) {
  using std::swap;
  additional_meta_.Swap(&other->additional_meta_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MetaResult::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Error::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Error::kCodeFieldNumber;
const int Error::kMessageFieldNumber;
const int Error::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Error::Error()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Error.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Error)
}
Error::Error(const Error& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:mcp.Error)
}

void Error::SharedCtor() {
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
}

Error::~Error() {
  // @@protoc_insertion_point(destructor:mcp.Error)
  SharedDtor();
}

void Error::SharedDtor() {
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Error::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Error& Error::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Error.base);
  return *internal_default_instance();
}


void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  code_ = 0;
  _internal_metadata_.Clear();
}

bool Error::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Error)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 code = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string message = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->message().data(), static_cast<int>(this->message().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Error.message"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Error)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Error)
  return false;
#undef DO_
}

void Error::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->code(), output);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Error.message");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->message(), output);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Error)
}

::google::protobuf::uint8* Error::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Error)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 code = 1;
  if (this->code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->code(), target);
  }

  // string message = 2;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->message().data(), static_cast<int>(this->message().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Error.message");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->message(), target);
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->data(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Error)
  return target;
}

size_t Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Error)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string message = 2;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->message());
  }

  // bytes data = 3;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->code());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Error::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Error* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Error>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Error)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Error)
    MergeFrom(*source);
  }
}

void Error::MergeFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.code() != 0) {
    set_code(from.code());
  }
}

void Error::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Error::IsInitialized() const {
  return true;
}

void Error::Swap(Error* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Error::InternalSwap(Error* other) {
  using std::swap;
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Implementation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Implementation::kNameFieldNumber;
const int Implementation::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Implementation::Implementation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Implementation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Implementation)
}
Implementation::Implementation(const Implementation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.Implementation)
}

void Implementation::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Implementation::~Implementation() {
  // @@protoc_insertion_point(destructor:mcp.Implementation)
  SharedDtor();
}

void Implementation::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Implementation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Implementation::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Implementation& Implementation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Implementation.base);
  return *internal_default_instance();
}


void Implementation::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Implementation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Implementation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Implementation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Implementation.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Implementation.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Implementation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Implementation)
  return false;
#undef DO_
}

void Implementation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Implementation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Implementation.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Implementation.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Implementation)
}

::google::protobuf::uint8* Implementation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Implementation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Implementation.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Implementation.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Implementation)
  return target;
}

size_t Implementation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Implementation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Implementation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Implementation)
  GOOGLE_DCHECK_NE(&from, this);
  const Implementation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Implementation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Implementation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Implementation)
    MergeFrom(*source);
  }
}

void Implementation::MergeFrom(const Implementation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Implementation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void Implementation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Implementation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Implementation::CopyFrom(const Implementation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Implementation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Implementation::IsInitialized() const {
  return true;
}

void Implementation::Swap(Implementation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Implementation::InternalSwap(Implementation* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Implementation::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ClientCapabilities_ExperimentalEntry_DoNotUse::ClientCapabilities_ExperimentalEntry_DoNotUse() {}
ClientCapabilities_ExperimentalEntry_DoNotUse::ClientCapabilities_ExperimentalEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ClientCapabilities_ExperimentalEntry_DoNotUse::MergeFrom(const ClientCapabilities_ExperimentalEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ClientCapabilities_ExperimentalEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[19];
}
void ClientCapabilities_ExperimentalEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ClientCapabilities::InitAsDefaultInstance() {
  ::mcp::_ClientCapabilities_default_instance_._instance.get_mutable()->roots_ = const_cast< ::mcp::RootsCapability*>(
      ::mcp::RootsCapability::internal_default_instance());
  ::mcp::_ClientCapabilities_default_instance_._instance.get_mutable()->sampling_ = const_cast< ::mcp::SamplingCapability*>(
      ::mcp::SamplingCapability::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCapabilities::kExperimentalFieldNumber;
const int ClientCapabilities::kRootsFieldNumber;
const int ClientCapabilities::kSamplingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCapabilities::ClientCapabilities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ClientCapabilities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ClientCapabilities)
}
ClientCapabilities::ClientCapabilities(const ClientCapabilities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experimental_.MergeFrom(from.experimental_);
  if (from.has_roots()) {
    roots_ = new ::mcp::RootsCapability(*from.roots_);
  } else {
    roots_ = NULL;
  }
  if (from.has_sampling()) {
    sampling_ = new ::mcp::SamplingCapability(*from.sampling_);
  } else {
    sampling_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ClientCapabilities)
}

void ClientCapabilities::SharedCtor() {
  ::memset(&roots_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sampling_) -
      reinterpret_cast<char*>(&roots_)) + sizeof(sampling_));
}

ClientCapabilities::~ClientCapabilities() {
  // @@protoc_insertion_point(destructor:mcp.ClientCapabilities)
  SharedDtor();
}

void ClientCapabilities::SharedDtor() {
  if (this != internal_default_instance()) delete roots_;
  if (this != internal_default_instance()) delete sampling_;
}

void ClientCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientCapabilities::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCapabilities& ClientCapabilities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ClientCapabilities.base);
  return *internal_default_instance();
}


void ClientCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ClientCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experimental_.Clear();
  if (GetArenaNoVirtual() == NULL && roots_ != NULL) {
    delete roots_;
  }
  roots_ = NULL;
  if (GetArenaNoVirtual() == NULL && sampling_ != NULL) {
    delete sampling_;
  }
  sampling_ = NULL;
  _internal_metadata_.Clear();
}

bool ClientCapabilities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ClientCapabilities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> experimental = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ClientCapabilities_ExperimentalEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ClientCapabilities_ExperimentalEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&experimental_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ClientCapabilities.ExperimentalEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.RootsCapability roots = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_roots()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.SamplingCapability sampling = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sampling()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ClientCapabilities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ClientCapabilities)
  return false;
#undef DO_
}

void ClientCapabilities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ClientCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> experimental = 1;
  if (!this->experimental().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.ClientCapabilities.ExperimentalEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->experimental().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->experimental().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(experimental_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it) {
        entry.reset(experimental_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .mcp.RootsCapability roots = 2;
  if (this->has_roots()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_roots(), output);
  }

  // .mcp.SamplingCapability sampling = 3;
  if (this->has_sampling()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_sampling(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ClientCapabilities)
}

::google::protobuf::uint8* ClientCapabilities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ClientCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> experimental = 1;
  if (!this->experimental().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.ClientCapabilities.ExperimentalEntry.key");
      }
    };

    if (deterministic &&
        this->experimental().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->experimental().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ClientCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(experimental_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ClientCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it) {
        entry.reset(experimental_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .mcp.RootsCapability roots = 2;
  if (this->has_roots()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_roots(), deterministic, target);
  }

  // .mcp.SamplingCapability sampling = 3;
  if (this->has_sampling()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_sampling(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ClientCapabilities)
  return target;
}

size_t ClientCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ClientCapabilities)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> experimental = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->experimental_size());
  {
    ::std::unique_ptr<ClientCapabilities_ExperimentalEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->experimental().begin();
        it != this->experimental().end(); ++it) {
      entry.reset(experimental_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .mcp.RootsCapability roots = 2;
  if (this->has_roots()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *roots_);
  }

  // .mcp.SamplingCapability sampling = 3;
  if (this->has_sampling()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sampling_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientCapabilities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ClientCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCapabilities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCapabilities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ClientCapabilities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ClientCapabilities)
    MergeFrom(*source);
  }
}

void ClientCapabilities::MergeFrom(const ClientCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ClientCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  experimental_.MergeFrom(from.experimental_);
  if (from.has_roots()) {
    mutable_roots()->::mcp::RootsCapability::MergeFrom(from.roots());
  }
  if (from.has_sampling()) {
    mutable_sampling()->::mcp::SamplingCapability::MergeFrom(from.sampling());
  }
}

void ClientCapabilities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ClientCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCapabilities::CopyFrom(const ClientCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ClientCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCapabilities::IsInitialized() const {
  return true;
}

void ClientCapabilities::Swap(ClientCapabilities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCapabilities::InternalSwap(ClientCapabilities* other) {
  using std::swap;
  experimental_.Swap(&other->experimental_);
  swap(roots_, other->roots_);
  swap(sampling_, other->sampling_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientCapabilities::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

ServerCapabilities_ExperimentalEntry_DoNotUse::ServerCapabilities_ExperimentalEntry_DoNotUse() {}
ServerCapabilities_ExperimentalEntry_DoNotUse::ServerCapabilities_ExperimentalEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void ServerCapabilities_ExperimentalEntry_DoNotUse::MergeFrom(const ServerCapabilities_ExperimentalEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata ServerCapabilities_ExperimentalEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[21];
}
void ServerCapabilities_ExperimentalEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void ServerCapabilities::InitAsDefaultInstance() {
  ::mcp::_ServerCapabilities_default_instance_._instance.get_mutable()->logging_ = const_cast< ::mcp::LoggingCapability*>(
      ::mcp::LoggingCapability::internal_default_instance());
  ::mcp::_ServerCapabilities_default_instance_._instance.get_mutable()->completions_ = const_cast< ::mcp::CompletionsCapability*>(
      ::mcp::CompletionsCapability::internal_default_instance());
  ::mcp::_ServerCapabilities_default_instance_._instance.get_mutable()->prompts_ = const_cast< ::mcp::PromptsCapability*>(
      ::mcp::PromptsCapability::internal_default_instance());
  ::mcp::_ServerCapabilities_default_instance_._instance.get_mutable()->resources_ = const_cast< ::mcp::ResourcesCapability*>(
      ::mcp::ResourcesCapability::internal_default_instance());
  ::mcp::_ServerCapabilities_default_instance_._instance.get_mutable()->tools_ = const_cast< ::mcp::ToolsCapability*>(
      ::mcp::ToolsCapability::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerCapabilities::kExperimentalFieldNumber;
const int ServerCapabilities::kLoggingFieldNumber;
const int ServerCapabilities::kCompletionsFieldNumber;
const int ServerCapabilities::kPromptsFieldNumber;
const int ServerCapabilities::kResourcesFieldNumber;
const int ServerCapabilities::kToolsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerCapabilities::ServerCapabilities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ServerCapabilities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ServerCapabilities)
}
ServerCapabilities::ServerCapabilities(const ServerCapabilities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  experimental_.MergeFrom(from.experimental_);
  if (from.has_logging()) {
    logging_ = new ::mcp::LoggingCapability(*from.logging_);
  } else {
    logging_ = NULL;
  }
  if (from.has_completions()) {
    completions_ = new ::mcp::CompletionsCapability(*from.completions_);
  } else {
    completions_ = NULL;
  }
  if (from.has_prompts()) {
    prompts_ = new ::mcp::PromptsCapability(*from.prompts_);
  } else {
    prompts_ = NULL;
  }
  if (from.has_resources()) {
    resources_ = new ::mcp::ResourcesCapability(*from.resources_);
  } else {
    resources_ = NULL;
  }
  if (from.has_tools()) {
    tools_ = new ::mcp::ToolsCapability(*from.tools_);
  } else {
    tools_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ServerCapabilities)
}

void ServerCapabilities::SharedCtor() {
  ::memset(&logging_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tools_) -
      reinterpret_cast<char*>(&logging_)) + sizeof(tools_));
}

ServerCapabilities::~ServerCapabilities() {
  // @@protoc_insertion_point(destructor:mcp.ServerCapabilities)
  SharedDtor();
}

void ServerCapabilities::SharedDtor() {
  if (this != internal_default_instance()) delete logging_;
  if (this != internal_default_instance()) delete completions_;
  if (this != internal_default_instance()) delete prompts_;
  if (this != internal_default_instance()) delete resources_;
  if (this != internal_default_instance()) delete tools_;
}

void ServerCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ServerCapabilities::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerCapabilities& ServerCapabilities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ServerCapabilities.base);
  return *internal_default_instance();
}


void ServerCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ServerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  experimental_.Clear();
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
  if (GetArenaNoVirtual() == NULL && completions_ != NULL) {
    delete completions_;
  }
  completions_ = NULL;
  if (GetArenaNoVirtual() == NULL && prompts_ != NULL) {
    delete prompts_;
  }
  prompts_ = NULL;
  if (GetArenaNoVirtual() == NULL && resources_ != NULL) {
    delete resources_;
  }
  resources_ = NULL;
  if (GetArenaNoVirtual() == NULL && tools_ != NULL) {
    delete tools_;
  }
  tools_ = NULL;
  _internal_metadata_.Clear();
}

bool ServerCapabilities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ServerCapabilities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> experimental = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ServerCapabilities_ExperimentalEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              ServerCapabilities_ExperimentalEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&experimental_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ServerCapabilities.ExperimentalEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.LoggingCapability logging = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logging()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.CompletionsCapability completions = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_completions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.PromptsCapability prompts = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prompts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ResourcesCapability resources = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ToolsCapability tools = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tools()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ServerCapabilities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ServerCapabilities)
  return false;
#undef DO_
}

void ServerCapabilities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ServerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> experimental = 1;
  if (!this->experimental().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.ServerCapabilities.ExperimentalEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->experimental().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->experimental().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(experimental_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it) {
        entry.reset(experimental_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .mcp.LoggingCapability logging = 2;
  if (this->has_logging()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_logging(), output);
  }

  // .mcp.CompletionsCapability completions = 3;
  if (this->has_completions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_completions(), output);
  }

  // .mcp.PromptsCapability prompts = 4;
  if (this->has_prompts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_prompts(), output);
  }

  // .mcp.ResourcesCapability resources = 5;
  if (this->has_resources()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_resources(), output);
  }

  // .mcp.ToolsCapability tools = 6;
  if (this->has_tools()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_tools(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ServerCapabilities)
}

::google::protobuf::uint8* ServerCapabilities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ServerCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> experimental = 1;
  if (!this->experimental().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.ServerCapabilities.ExperimentalEntry.key");
      }
    };

    if (deterministic &&
        this->experimental().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->experimental().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<ServerCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(experimental_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<ServerCapabilities_ExperimentalEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->experimental().begin();
          it != this->experimental().end(); ++it) {
        entry.reset(experimental_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .mcp.LoggingCapability logging = 2;
  if (this->has_logging()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_logging(), deterministic, target);
  }

  // .mcp.CompletionsCapability completions = 3;
  if (this->has_completions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_completions(), deterministic, target);
  }

  // .mcp.PromptsCapability prompts = 4;
  if (this->has_prompts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_prompts(), deterministic, target);
  }

  // .mcp.ResourcesCapability resources = 5;
  if (this->has_resources()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_resources(), deterministic, target);
  }

  // .mcp.ToolsCapability tools = 6;
  if (this->has_tools()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_tools(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ServerCapabilities)
  return target;
}

size_t ServerCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ServerCapabilities)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> experimental = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->experimental_size());
  {
    ::std::unique_ptr<ServerCapabilities_ExperimentalEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->experimental().begin();
        it != this->experimental().end(); ++it) {
      entry.reset(experimental_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .mcp.LoggingCapability logging = 2;
  if (this->has_logging()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logging_);
  }

  // .mcp.CompletionsCapability completions = 3;
  if (this->has_completions()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *completions_);
  }

  // .mcp.PromptsCapability prompts = 4;
  if (this->has_prompts()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prompts_);
  }

  // .mcp.ResourcesCapability resources = 5;
  if (this->has_resources()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *resources_);
  }

  // .mcp.ToolsCapability tools = 6;
  if (this->has_tools()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tools_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ServerCapabilities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ServerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerCapabilities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerCapabilities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ServerCapabilities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ServerCapabilities)
    MergeFrom(*source);
  }
}

void ServerCapabilities::MergeFrom(const ServerCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ServerCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  experimental_.MergeFrom(from.experimental_);
  if (from.has_logging()) {
    mutable_logging()->::mcp::LoggingCapability::MergeFrom(from.logging());
  }
  if (from.has_completions()) {
    mutable_completions()->::mcp::CompletionsCapability::MergeFrom(from.completions());
  }
  if (from.has_prompts()) {
    mutable_prompts()->::mcp::PromptsCapability::MergeFrom(from.prompts());
  }
  if (from.has_resources()) {
    mutable_resources()->::mcp::ResourcesCapability::MergeFrom(from.resources());
  }
  if (from.has_tools()) {
    mutable_tools()->::mcp::ToolsCapability::MergeFrom(from.tools());
  }
}

void ServerCapabilities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ServerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerCapabilities::CopyFrom(const ServerCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ServerCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerCapabilities::IsInitialized() const {
  return true;
}

void ServerCapabilities::Swap(ServerCapabilities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerCapabilities::InternalSwap(ServerCapabilities* other) {
  using std::swap;
  experimental_.Swap(&other->experimental_);
  swap(logging_, other->logging_);
  swap(completions_, other->completions_);
  swap(prompts_, other->prompts_);
  swap(resources_, other->resources_);
  swap(tools_, other->tools_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ServerCapabilities::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RootsCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RootsCapability::kListChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RootsCapability::RootsCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_RootsCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.RootsCapability)
}
RootsCapability::RootsCapability(const RootsCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_changed_ = from.list_changed_;
  // @@protoc_insertion_point(copy_constructor:mcp.RootsCapability)
}

void RootsCapability::SharedCtor() {
  list_changed_ = false;
}

RootsCapability::~RootsCapability() {
  // @@protoc_insertion_point(destructor:mcp.RootsCapability)
  SharedDtor();
}

void RootsCapability::SharedDtor() {
}

void RootsCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RootsCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RootsCapability& RootsCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_RootsCapability.base);
  return *internal_default_instance();
}


void RootsCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.RootsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_changed_ = false;
  _internal_metadata_.Clear();
}

bool RootsCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.RootsCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool list_changed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.RootsCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.RootsCapability)
  return false;
#undef DO_
}

void RootsCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.RootsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->list_changed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.RootsCapability)
}

::google::protobuf::uint8* RootsCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.RootsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->list_changed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.RootsCapability)
  return target;
}

size_t RootsCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.RootsCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RootsCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.RootsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const RootsCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RootsCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.RootsCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.RootsCapability)
    MergeFrom(*source);
  }
}

void RootsCapability::MergeFrom(const RootsCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.RootsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_changed() != 0) {
    set_list_changed(from.list_changed());
  }
}

void RootsCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.RootsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RootsCapability::CopyFrom(const RootsCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.RootsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RootsCapability::IsInitialized() const {
  return true;
}

void RootsCapability::Swap(RootsCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RootsCapability::InternalSwap(RootsCapability* other) {
  using std::swap;
  swap(list_changed_, other->list_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RootsCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SamplingCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SamplingCapability::SamplingCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_SamplingCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.SamplingCapability)
}
SamplingCapability::SamplingCapability(const SamplingCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.SamplingCapability)
}

void SamplingCapability::SharedCtor() {
}

SamplingCapability::~SamplingCapability() {
  // @@protoc_insertion_point(destructor:mcp.SamplingCapability)
  SharedDtor();
}

void SamplingCapability::SharedDtor() {
}

void SamplingCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SamplingCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SamplingCapability& SamplingCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_SamplingCapability.base);
  return *internal_default_instance();
}


void SamplingCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.SamplingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool SamplingCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.SamplingCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.SamplingCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.SamplingCapability)
  return false;
#undef DO_
}

void SamplingCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.SamplingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.SamplingCapability)
}

::google::protobuf::uint8* SamplingCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.SamplingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.SamplingCapability)
  return target;
}

size_t SamplingCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.SamplingCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SamplingCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.SamplingCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const SamplingCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SamplingCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.SamplingCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.SamplingCapability)
    MergeFrom(*source);
  }
}

void SamplingCapability::MergeFrom(const SamplingCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.SamplingCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SamplingCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.SamplingCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SamplingCapability::CopyFrom(const SamplingCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.SamplingCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SamplingCapability::IsInitialized() const {
  return true;
}

void SamplingCapability::Swap(SamplingCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SamplingCapability::InternalSwap(SamplingCapability* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SamplingCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoggingCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoggingCapability::LoggingCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_LoggingCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.LoggingCapability)
}
LoggingCapability::LoggingCapability(const LoggingCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.LoggingCapability)
}

void LoggingCapability::SharedCtor() {
}

LoggingCapability::~LoggingCapability() {
  // @@protoc_insertion_point(destructor:mcp.LoggingCapability)
  SharedDtor();
}

void LoggingCapability::SharedDtor() {
}

void LoggingCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LoggingCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoggingCapability& LoggingCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_LoggingCapability.base);
  return *internal_default_instance();
}


void LoggingCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.LoggingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool LoggingCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.LoggingCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.LoggingCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.LoggingCapability)
  return false;
#undef DO_
}

void LoggingCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.LoggingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.LoggingCapability)
}

::google::protobuf::uint8* LoggingCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.LoggingCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.LoggingCapability)
  return target;
}

size_t LoggingCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.LoggingCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LoggingCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.LoggingCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const LoggingCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoggingCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.LoggingCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.LoggingCapability)
    MergeFrom(*source);
  }
}

void LoggingCapability::MergeFrom(const LoggingCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.LoggingCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void LoggingCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.LoggingCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoggingCapability::CopyFrom(const LoggingCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.LoggingCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoggingCapability::IsInitialized() const {
  return true;
}

void LoggingCapability::Swap(LoggingCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoggingCapability::InternalSwap(LoggingCapability* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LoggingCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CompletionsCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CompletionsCapability::CompletionsCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_CompletionsCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.CompletionsCapability)
}
CompletionsCapability::CompletionsCapability(const CompletionsCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.CompletionsCapability)
}

void CompletionsCapability::SharedCtor() {
}

CompletionsCapability::~CompletionsCapability() {
  // @@protoc_insertion_point(destructor:mcp.CompletionsCapability)
  SharedDtor();
}

void CompletionsCapability::SharedDtor() {
}

void CompletionsCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CompletionsCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CompletionsCapability& CompletionsCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_CompletionsCapability.base);
  return *internal_default_instance();
}


void CompletionsCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.CompletionsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool CompletionsCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.CompletionsCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.CompletionsCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.CompletionsCapability)
  return false;
#undef DO_
}

void CompletionsCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.CompletionsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.CompletionsCapability)
}

::google::protobuf::uint8* CompletionsCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.CompletionsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.CompletionsCapability)
  return target;
}

size_t CompletionsCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.CompletionsCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CompletionsCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.CompletionsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const CompletionsCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CompletionsCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.CompletionsCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.CompletionsCapability)
    MergeFrom(*source);
  }
}

void CompletionsCapability::MergeFrom(const CompletionsCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.CompletionsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CompletionsCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.CompletionsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CompletionsCapability::CopyFrom(const CompletionsCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.CompletionsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CompletionsCapability::IsInitialized() const {
  return true;
}

void CompletionsCapability::Swap(CompletionsCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CompletionsCapability::InternalSwap(CompletionsCapability* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CompletionsCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PromptsCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PromptsCapability::kListChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PromptsCapability::PromptsCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_PromptsCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.PromptsCapability)
}
PromptsCapability::PromptsCapability(const PromptsCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_changed_ = from.list_changed_;
  // @@protoc_insertion_point(copy_constructor:mcp.PromptsCapability)
}

void PromptsCapability::SharedCtor() {
  list_changed_ = false;
}

PromptsCapability::~PromptsCapability() {
  // @@protoc_insertion_point(destructor:mcp.PromptsCapability)
  SharedDtor();
}

void PromptsCapability::SharedDtor() {
}

void PromptsCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PromptsCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PromptsCapability& PromptsCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_PromptsCapability.base);
  return *internal_default_instance();
}


void PromptsCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.PromptsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_changed_ = false;
  _internal_metadata_.Clear();
}

bool PromptsCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.PromptsCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool list_changed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.PromptsCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.PromptsCapability)
  return false;
#undef DO_
}

void PromptsCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.PromptsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->list_changed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.PromptsCapability)
}

::google::protobuf::uint8* PromptsCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.PromptsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->list_changed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.PromptsCapability)
  return target;
}

size_t PromptsCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.PromptsCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PromptsCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.PromptsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const PromptsCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PromptsCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.PromptsCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.PromptsCapability)
    MergeFrom(*source);
  }
}

void PromptsCapability::MergeFrom(const PromptsCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.PromptsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_changed() != 0) {
    set_list_changed(from.list_changed());
  }
}

void PromptsCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.PromptsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromptsCapability::CopyFrom(const PromptsCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.PromptsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromptsCapability::IsInitialized() const {
  return true;
}

void PromptsCapability::Swap(PromptsCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PromptsCapability::InternalSwap(PromptsCapability* other) {
  using std::swap;
  swap(list_changed_, other->list_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PromptsCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourcesCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourcesCapability::kSubscribeFieldNumber;
const int ResourcesCapability::kListChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourcesCapability::ResourcesCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ResourcesCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ResourcesCapability)
}
ResourcesCapability::ResourcesCapability(const ResourcesCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&subscribe_, &from.subscribe_,
    static_cast<size_t>(reinterpret_cast<char*>(&list_changed_) -
    reinterpret_cast<char*>(&subscribe_)) + sizeof(list_changed_));
  // @@protoc_insertion_point(copy_constructor:mcp.ResourcesCapability)
}

void ResourcesCapability::SharedCtor() {
  ::memset(&subscribe_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&list_changed_) -
      reinterpret_cast<char*>(&subscribe_)) + sizeof(list_changed_));
}

ResourcesCapability::~ResourcesCapability() {
  // @@protoc_insertion_point(destructor:mcp.ResourcesCapability)
  SharedDtor();
}

void ResourcesCapability::SharedDtor() {
}

void ResourcesCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourcesCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourcesCapability& ResourcesCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ResourcesCapability.base);
  return *internal_default_instance();
}


void ResourcesCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ResourcesCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&subscribe_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&list_changed_) -
      reinterpret_cast<char*>(&subscribe_)) + sizeof(list_changed_));
  _internal_metadata_.Clear();
}

bool ResourcesCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ResourcesCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool subscribe = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &subscribe_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool list_changed = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ResourcesCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ResourcesCapability)
  return false;
#undef DO_
}

void ResourcesCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ResourcesCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool subscribe = 1;
  if (this->subscribe() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->subscribe(), output);
  }

  // bool list_changed = 2;
  if (this->list_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->list_changed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ResourcesCapability)
}

::google::protobuf::uint8* ResourcesCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ResourcesCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool subscribe = 1;
  if (this->subscribe() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->subscribe(), target);
  }

  // bool list_changed = 2;
  if (this->list_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->list_changed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ResourcesCapability)
  return target;
}

size_t ResourcesCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ResourcesCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool subscribe = 1;
  if (this->subscribe() != 0) {
    total_size += 1 + 1;
  }

  // bool list_changed = 2;
  if (this->list_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourcesCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ResourcesCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourcesCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourcesCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ResourcesCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ResourcesCapability)
    MergeFrom(*source);
  }
}

void ResourcesCapability::MergeFrom(const ResourcesCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ResourcesCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscribe() != 0) {
    set_subscribe(from.subscribe());
  }
  if (from.list_changed() != 0) {
    set_list_changed(from.list_changed());
  }
}

void ResourcesCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ResourcesCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourcesCapability::CopyFrom(const ResourcesCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ResourcesCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourcesCapability::IsInitialized() const {
  return true;
}

void ResourcesCapability::Swap(ResourcesCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourcesCapability::InternalSwap(ResourcesCapability* other) {
  using std::swap;
  swap(subscribe_, other->subscribe_);
  swap(list_changed_, other->list_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourcesCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToolsCapability::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToolsCapability::kListChangedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToolsCapability::ToolsCapability()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ToolsCapability.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ToolsCapability)
}
ToolsCapability::ToolsCapability(const ToolsCapability& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  list_changed_ = from.list_changed_;
  // @@protoc_insertion_point(copy_constructor:mcp.ToolsCapability)
}

void ToolsCapability::SharedCtor() {
  list_changed_ = false;
}

ToolsCapability::~ToolsCapability() {
  // @@protoc_insertion_point(destructor:mcp.ToolsCapability)
  SharedDtor();
}

void ToolsCapability::SharedDtor() {
}

void ToolsCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToolsCapability::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToolsCapability& ToolsCapability::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ToolsCapability.base);
  return *internal_default_instance();
}


void ToolsCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ToolsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  list_changed_ = false;
  _internal_metadata_.Clear();
}

bool ToolsCapability::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ToolsCapability)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool list_changed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &list_changed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ToolsCapability)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ToolsCapability)
  return false;
#undef DO_
}

void ToolsCapability::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ToolsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->list_changed(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ToolsCapability)
}

::google::protobuf::uint8* ToolsCapability::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ToolsCapability)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->list_changed(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ToolsCapability)
  return target;
}

size_t ToolsCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ToolsCapability)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool list_changed = 1;
  if (this->list_changed() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToolsCapability::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ToolsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const ToolsCapability* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToolsCapability>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ToolsCapability)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ToolsCapability)
    MergeFrom(*source);
  }
}

void ToolsCapability::MergeFrom(const ToolsCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ToolsCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.list_changed() != 0) {
    set_list_changed(from.list_changed());
  }
}

void ToolsCapability::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ToolsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToolsCapability::CopyFrom(const ToolsCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ToolsCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolsCapability::IsInitialized() const {
  return true;
}

void ToolsCapability::Swap(ToolsCapability* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToolsCapability::InternalSwap(ToolsCapability* other) {
  using std::swap;
  swap(list_changed_, other->list_changed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToolsCapability::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Resource::InitAsDefaultInstance() {
  ::mcp::_Resource_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::Annotations*>(
      ::mcp::Annotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Resource::kUriFieldNumber;
const int Resource::kNameFieldNumber;
const int Resource::kDescriptionFieldNumber;
const int Resource::kMimeTypeFieldNumber;
const int Resource::kAnnotationsFieldNumber;
const int Resource::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Resource::Resource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Resource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Resource)
}
Resource::Resource(const Resource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:mcp.Resource)
}

void Resource::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&annotations_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&size_) -
      reinterpret_cast<char*>(&annotations_)) + sizeof(size_));
}

Resource::~Resource() {
  // @@protoc_insertion_point(destructor:mcp.Resource)
  SharedDtor();
}

void Resource::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotations_;
}

void Resource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Resource::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Resource& Resource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Resource.base);
  return *internal_default_instance();
}


void Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Resource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Resource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Resource.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Resource.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Resource.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Resource.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Annotations annotations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Resource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Resource)
  return false;
#undef DO_
}

void Resource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mime_type(), output);
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_annotations(), output);
  }

  // int64 size = 6;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Resource)
}

::google::protobuf::uint8* Resource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Resource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Resource.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mime_type(), target);
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_annotations(), deterministic, target);
  }

  // int64 size = 6;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Resource)
  return target;
}

size_t Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Resource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  // int64 size = 6;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Resource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  const Resource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Resource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Resource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Resource)
    MergeFrom(*source);
  }
}

void Resource::MergeFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Resource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::Annotations::MergeFrom(from.annotations());
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void Resource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Resource::CopyFrom(const Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Resource::IsInitialized() const {
  return true;
}

void Resource::Swap(Resource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Resource::InternalSwap(Resource* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotations_, other->annotations_);
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Resource::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceTemplate::InitAsDefaultInstance() {
  ::mcp::_ResourceTemplate_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::Annotations*>(
      ::mcp::Annotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceTemplate::kUriTemplateFieldNumber;
const int ResourceTemplate::kNameFieldNumber;
const int ResourceTemplate::kDescriptionFieldNumber;
const int ResourceTemplate::kMimeTypeFieldNumber;
const int ResourceTemplate::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceTemplate::ResourceTemplate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ResourceTemplate.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ResourceTemplate)
}
ResourceTemplate::ResourceTemplate(const ResourceTemplate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_template_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri_template().size() > 0) {
    uri_template_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_template_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ResourceTemplate)
}

void ResourceTemplate::SharedCtor() {
  uri_template_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  annotations_ = NULL;
}

ResourceTemplate::~ResourceTemplate() {
  // @@protoc_insertion_point(destructor:mcp.ResourceTemplate)
  SharedDtor();
}

void ResourceTemplate::SharedDtor() {
  uri_template_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotations_;
}

void ResourceTemplate::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceTemplate::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceTemplate& ResourceTemplate::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ResourceTemplate.base);
  return *internal_default_instance();
}


void ResourceTemplate::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ResourceTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_template_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool ResourceTemplate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ResourceTemplate)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri_template = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri_template()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri_template().data(), static_cast<int>(this->uri_template().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceTemplate.uri_template"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceTemplate.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceTemplate.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceTemplate.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Annotations annotations = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ResourceTemplate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ResourceTemplate)
  return false;
#undef DO_
}

void ResourceTemplate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ResourceTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri_template = 1;
  if (this->uri_template().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_template().data(), static_cast<int>(this->uri_template().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.uri_template");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri_template(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mime_type(), output);
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ResourceTemplate)
}

::google::protobuf::uint8* ResourceTemplate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ResourceTemplate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri_template = 1;
  if (this->uri_template().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri_template().data(), static_cast<int>(this->uri_template().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.uri_template");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri_template(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceTemplate.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mime_type(), target);
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ResourceTemplate)
  return target;
}

size_t ResourceTemplate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ResourceTemplate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri_template = 1;
  if (this->uri_template().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri_template());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string mime_type = 4;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .mcp.Annotations annotations = 5;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceTemplate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ResourceTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceTemplate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceTemplate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ResourceTemplate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ResourceTemplate)
    MergeFrom(*source);
  }
}

void ResourceTemplate::MergeFrom(const ResourceTemplate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ResourceTemplate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri_template().size() > 0) {

    uri_template_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_template_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::Annotations::MergeFrom(from.annotations());
  }
}

void ResourceTemplate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ResourceTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceTemplate::CopyFrom(const ResourceTemplate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ResourceTemplate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceTemplate::IsInitialized() const {
  return true;
}

void ResourceTemplate::Swap(ResourceTemplate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceTemplate::InternalSwap(ResourceTemplate* other) {
  using std::swap;
  uri_template_.Swap(&other->uri_template_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceTemplate::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceContents::InitAsDefaultInstance() {
  ::mcp::_ResourceContents_default_instance_.text_ = const_cast< ::mcp::TextResourceContents*>(
      ::mcp::TextResourceContents::internal_default_instance());
  ::mcp::_ResourceContents_default_instance_.blob_ = const_cast< ::mcp::BlobResourceContents*>(
      ::mcp::BlobResourceContents::internal_default_instance());
}
void ResourceContents::set_allocated_text(::mcp::TextResourceContents* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_content();
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    set_has_text();
    content_.text_ = text;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.ResourceContents.text)
}
void ResourceContents::set_allocated_blob(::mcp::BlobResourceContents* blob) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_content();
  if (blob) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      blob = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, blob, submessage_arena);
    }
    set_has_blob();
    content_.blob_ = blob;
  }
  // @@protoc_insertion_point(field_set_allocated:mcp.ResourceContents.blob)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceContents::kUriFieldNumber;
const int ResourceContents::kMimeTypeFieldNumber;
const int ResourceContents::kTextFieldNumber;
const int ResourceContents::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceContents::ResourceContents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ResourceContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ResourceContents)
}
ResourceContents::ResourceContents(const ResourceContents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  clear_has_content();
  switch (from.content_case()) {
    case kText: {
      mutable_text()->::mcp::TextResourceContents::MergeFrom(from.text());
      break;
    }
    case kBlob: {
      mutable_blob()->::mcp::BlobResourceContents::MergeFrom(from.blob());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ResourceContents)
}

void ResourceContents::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}

ResourceContents::~ResourceContents() {
  // @@protoc_insertion_point(destructor:mcp.ResourceContents)
  SharedDtor();
}

void ResourceContents::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (has_content()) {
    clear_content();
  }
}

void ResourceContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceContents::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceContents& ResourceContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ResourceContents.base);
  return *internal_default_instance();
}


void ResourceContents::clear_content() {
// @@protoc_insertion_point(one_of_clear_start:mcp.ResourceContents)
  switch (content_case()) {
    case kText: {
      delete content_.text_;
      break;
    }
    case kBlob: {
      delete content_.blob_;
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = CONTENT_NOT_SET;
}


void ResourceContents::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_content();
  _internal_metadata_.Clear();
}

bool ResourceContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ResourceContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceContents.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceContents.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.TextResourceContents text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.BlobResourceContents blob = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ResourceContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ResourceContents)
  return false;
#undef DO_
}

void ResourceContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceContents.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceContents.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->mime_type(), output);
  }

  // .mcp.TextResourceContents text = 3;
  if (has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_text(), output);
  }

  // .mcp.BlobResourceContents blob = 4;
  if (has_blob()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_blob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ResourceContents)
}

::google::protobuf::uint8* ResourceContents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceContents.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceContents.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->mime_type(), target);
  }

  // .mcp.TextResourceContents text = 3;
  if (has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_text(), deterministic, target);
  }

  // .mcp.BlobResourceContents blob = 4;
  if (has_blob()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_blob(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ResourceContents)
  return target;
}

size_t ResourceContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ResourceContents)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string mime_type = 2;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  switch (content_case()) {
    // .mcp.TextResourceContents text = 3;
    case kText: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *content_.text_);
      break;
    }
    // .mcp.BlobResourceContents blob = 4;
    case kBlob: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *content_.blob_);
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceContents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceContents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceContents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ResourceContents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ResourceContents)
    MergeFrom(*source);
  }
}

void ResourceContents::MergeFrom(const ResourceContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  switch (from.content_case()) {
    case kText: {
      mutable_text()->::mcp::TextResourceContents::MergeFrom(from.text());
      break;
    }
    case kBlob: {
      mutable_blob()->::mcp::BlobResourceContents::MergeFrom(from.blob());
      break;
    }
    case CONTENT_NOT_SET: {
      break;
    }
  }
}

void ResourceContents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceContents::CopyFrom(const ResourceContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceContents::IsInitialized() const {
  return true;
}

void ResourceContents::Swap(ResourceContents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceContents::InternalSwap(ResourceContents* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(content_, other->content_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceContents::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextResourceContents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextResourceContents::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextResourceContents::TextResourceContents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_TextResourceContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.TextResourceContents)
}
TextResourceContents::TextResourceContents(const TextResourceContents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.TextResourceContents)
}

void TextResourceContents::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

TextResourceContents::~TextResourceContents() {
  // @@protoc_insertion_point(destructor:mcp.TextResourceContents)
  SharedDtor();
}

void TextResourceContents::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextResourceContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextResourceContents::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextResourceContents& TextResourceContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_TextResourceContents.base);
  return *internal_default_instance();
}


void TextResourceContents::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.TextResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TextResourceContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.TextResourceContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.TextResourceContents.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.TextResourceContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.TextResourceContents)
  return false;
#undef DO_
}

void TextResourceContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.TextResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextResourceContents.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.TextResourceContents)
}

::google::protobuf::uint8* TextResourceContents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.TextResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextResourceContents.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.TextResourceContents)
  return target;
}

size_t TextResourceContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.TextResourceContents)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextResourceContents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.TextResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  const TextResourceContents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextResourceContents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.TextResourceContents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.TextResourceContents)
    MergeFrom(*source);
  }
}

void TextResourceContents::MergeFrom(const TextResourceContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.TextResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void TextResourceContents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.TextResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextResourceContents::CopyFrom(const TextResourceContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.TextResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextResourceContents::IsInitialized() const {
  return true;
}

void TextResourceContents::Swap(TextResourceContents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextResourceContents::InternalSwap(TextResourceContents* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextResourceContents::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlobResourceContents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlobResourceContents::kBlobFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlobResourceContents::BlobResourceContents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_BlobResourceContents.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.BlobResourceContents)
}
BlobResourceContents::BlobResourceContents(const BlobResourceContents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.blob().size() > 0) {
    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.BlobResourceContents)
}

void BlobResourceContents::SharedCtor() {
  blob_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BlobResourceContents::~BlobResourceContents() {
  // @@protoc_insertion_point(destructor:mcp.BlobResourceContents)
  SharedDtor();
}

void BlobResourceContents::SharedDtor() {
  blob_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BlobResourceContents::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlobResourceContents::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlobResourceContents& BlobResourceContents::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_BlobResourceContents.base);
  return *internal_default_instance();
}


void BlobResourceContents::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.BlobResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blob_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BlobResourceContents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.BlobResourceContents)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes blob = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_blob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.BlobResourceContents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.BlobResourceContents)
  return false;
#undef DO_
}

void BlobResourceContents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.BlobResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blob = 1;
  if (this->blob().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->blob(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.BlobResourceContents)
}

::google::protobuf::uint8* BlobResourceContents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.BlobResourceContents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes blob = 1;
  if (this->blob().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->blob(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.BlobResourceContents)
  return target;
}

size_t BlobResourceContents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.BlobResourceContents)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes blob = 1;
  if (this->blob().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->blob());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlobResourceContents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.BlobResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  const BlobResourceContents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlobResourceContents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.BlobResourceContents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.BlobResourceContents)
    MergeFrom(*source);
  }
}

void BlobResourceContents::MergeFrom(const BlobResourceContents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.BlobResourceContents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.blob().size() > 0) {

    blob_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.blob_);
  }
}

void BlobResourceContents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.BlobResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlobResourceContents::CopyFrom(const BlobResourceContents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.BlobResourceContents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlobResourceContents::IsInitialized() const {
  return true;
}

void BlobResourceContents::Swap(BlobResourceContents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlobResourceContents::InternalSwap(BlobResourceContents* other) {
  using std::swap;
  blob_.Swap(&other->blob_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlobResourceContents::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Tool::InitAsDefaultInstance() {
  ::mcp::_Tool_default_instance_._instance.get_mutable()->input_schema_ = const_cast< ::mcp::InputSchema*>(
      ::mcp::InputSchema::internal_default_instance());
  ::mcp::_Tool_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::ToolAnnotations*>(
      ::mcp::ToolAnnotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tool::kNameFieldNumber;
const int Tool::kDescriptionFieldNumber;
const int Tool::kInputSchemaFieldNumber;
const int Tool::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tool::Tool()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Tool.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Tool)
}
Tool::Tool(const Tool& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_input_schema()) {
    input_schema_ = new ::mcp::InputSchema(*from.input_schema_);
  } else {
    input_schema_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::ToolAnnotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.Tool)
}

void Tool::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&input_schema_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&input_schema_)) + sizeof(annotations_));
}

Tool::~Tool() {
  // @@protoc_insertion_point(destructor:mcp.Tool)
  SharedDtor();
}

void Tool::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete input_schema_;
  if (this != internal_default_instance()) delete annotations_;
}

void Tool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Tool::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tool& Tool::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Tool.base);
  return *internal_default_instance();
}


void Tool::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Tool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && input_schema_ != NULL) {
    delete input_schema_;
  }
  input_schema_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool Tool::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Tool)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Tool.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Tool.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.InputSchema input_schema = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_schema()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ToolAnnotations annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Tool)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Tool)
  return false;
#undef DO_
}

void Tool::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Tool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Tool.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Tool.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // .mcp.InputSchema input_schema = 3;
  if (this->has_input_schema()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_input_schema(), output);
  }

  // .mcp.ToolAnnotations annotations = 4;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Tool)
}

::google::protobuf::uint8* Tool::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Tool)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Tool.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Tool.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->description(), target);
  }

  // .mcp.InputSchema input_schema = 3;
  if (this->has_input_schema()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_input_schema(), deterministic, target);
  }

  // .mcp.ToolAnnotations annotations = 4;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Tool)
  return target;
}

size_t Tool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Tool)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .mcp.InputSchema input_schema = 3;
  if (this->has_input_schema()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *input_schema_);
  }

  // .mcp.ToolAnnotations annotations = 4;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tool::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Tool)
  GOOGLE_DCHECK_NE(&from, this);
  const Tool* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Tool>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Tool)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Tool)
    MergeFrom(*source);
  }
}

void Tool::MergeFrom(const Tool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Tool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_input_schema()) {
    mutable_input_schema()->::mcp::InputSchema::MergeFrom(from.input_schema());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::ToolAnnotations::MergeFrom(from.annotations());
  }
}

void Tool::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Tool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tool::CopyFrom(const Tool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Tool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tool::IsInitialized() const {
  return true;
}

void Tool::Swap(Tool* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Tool::InternalSwap(Tool* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(input_schema_, other->input_schema_);
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Tool::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

InputSchema_PropertiesEntry_DoNotUse::InputSchema_PropertiesEntry_DoNotUse() {}
InputSchema_PropertiesEntry_DoNotUse::InputSchema_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void InputSchema_PropertiesEntry_DoNotUse::MergeFrom(const InputSchema_PropertiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata InputSchema_PropertiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[36];
}
void InputSchema_PropertiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void InputSchema::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InputSchema::kTypeFieldNumber;
const int InputSchema::kPropertiesFieldNumber;
const int InputSchema::kRequiredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InputSchema::InputSchema()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_InputSchema.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.InputSchema)
}
InputSchema::InputSchema(const InputSchema& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      required_(from.required_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  properties_.MergeFrom(from.properties_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.InputSchema)
}

void InputSchema::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

InputSchema::~InputSchema() {
  // @@protoc_insertion_point(destructor:mcp.InputSchema)
  SharedDtor();
}

void InputSchema::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InputSchema::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InputSchema::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InputSchema& InputSchema::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_InputSchema.base);
  return *internal_default_instance();
}


void InputSchema::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.InputSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  properties_.Clear();
  required_.Clear();
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool InputSchema::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.InputSchema)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InputSchema.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> properties = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          InputSchema_PropertiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              InputSchema_PropertiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&properties_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InputSchema.PropertiesEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string required = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->required(this->required_size() - 1).data(),
            static_cast<int>(this->required(this->required_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InputSchema.required"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.InputSchema)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.InputSchema)
  return false;
#undef DO_
}

void InputSchema::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.InputSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InputSchema.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // map<string, bytes> properties = 2;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.InputSchema.PropertiesEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InputSchema_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InputSchema_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string required = 3;
  for (int i = 0, n = this->required_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->required(i).data(), static_cast<int>(this->required(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InputSchema.required");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->required(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.InputSchema)
}

::google::protobuf::uint8* InputSchema::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.InputSchema)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InputSchema.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // map<string, bytes> properties = 2;
  if (!this->properties().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "mcp.InputSchema.PropertiesEntry.key");
      }
    };

    if (deterministic &&
        this->properties().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->properties().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<InputSchema_PropertiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(properties_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<InputSchema_PropertiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->properties().begin();
          it != this->properties().end(); ++it) {
        entry.reset(properties_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated string required = 3;
  for (int i = 0, n = this->required_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->required(i).data(), static_cast<int>(this->required(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InputSchema.required");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->required(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.InputSchema)
  return target;
}

size_t InputSchema::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.InputSchema)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> properties = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->properties_size());
  {
    ::std::unique_ptr<InputSchema_PropertiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->properties().begin();
        it != this->properties().end(); ++it) {
      entry.reset(properties_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated string required = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->required_size());
  for (int i = 0, n = this->required_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required(i));
  }

  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputSchema::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.InputSchema)
  GOOGLE_DCHECK_NE(&from, this);
  const InputSchema* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InputSchema>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.InputSchema)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.InputSchema)
    MergeFrom(*source);
  }
}

void InputSchema::MergeFrom(const InputSchema& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.InputSchema)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  properties_.MergeFrom(from.properties_);
  required_.MergeFrom(from.required_);
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
}

void InputSchema::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.InputSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputSchema::CopyFrom(const InputSchema& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.InputSchema)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputSchema::IsInitialized() const {
  return true;
}

void InputSchema::Swap(InputSchema* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InputSchema::InternalSwap(InputSchema* other) {
  using std::swap;
  properties_.Swap(&other->properties_);
  required_.InternalSwap(CastToBase(&other->required_));
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InputSchema::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ToolAnnotations::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ToolAnnotations::kTitleFieldNumber;
const int ToolAnnotations::kReadOnlyHintFieldNumber;
const int ToolAnnotations::kDestructiveHintFieldNumber;
const int ToolAnnotations::kIdempotentHintFieldNumber;
const int ToolAnnotations::kOpenWorldHintFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ToolAnnotations::ToolAnnotations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ToolAnnotations.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ToolAnnotations)
}
ToolAnnotations::ToolAnnotations(const ToolAnnotations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  ::memcpy(&read_only_hint_, &from.read_only_hint_,
    static_cast<size_t>(reinterpret_cast<char*>(&open_world_hint_) -
    reinterpret_cast<char*>(&read_only_hint_)) + sizeof(open_world_hint_));
  // @@protoc_insertion_point(copy_constructor:mcp.ToolAnnotations)
}

void ToolAnnotations::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_only_hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&open_world_hint_) -
      reinterpret_cast<char*>(&read_only_hint_)) + sizeof(open_world_hint_));
}

ToolAnnotations::~ToolAnnotations() {
  // @@protoc_insertion_point(destructor:mcp.ToolAnnotations)
  SharedDtor();
}

void ToolAnnotations::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ToolAnnotations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ToolAnnotations::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ToolAnnotations& ToolAnnotations::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ToolAnnotations.base);
  return *internal_default_instance();
}


void ToolAnnotations::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ToolAnnotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&read_only_hint_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&open_world_hint_) -
      reinterpret_cast<char*>(&read_only_hint_)) + sizeof(open_world_hint_));
  _internal_metadata_.Clear();
}

bool ToolAnnotations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ToolAnnotations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ToolAnnotations.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool read_only_hint = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &read_only_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool destructive_hint = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &destructive_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool idempotent_hint = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &idempotent_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool open_world_hint = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &open_world_hint_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ToolAnnotations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ToolAnnotations)
  return false;
#undef DO_
}

void ToolAnnotations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ToolAnnotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ToolAnnotations.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // bool read_only_hint = 2;
  if (this->read_only_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->read_only_hint(), output);
  }

  // bool destructive_hint = 3;
  if (this->destructive_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->destructive_hint(), output);
  }

  // bool idempotent_hint = 4;
  if (this->idempotent_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->idempotent_hint(), output);
  }

  // bool open_world_hint = 5;
  if (this->open_world_hint() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->open_world_hint(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ToolAnnotations)
}

::google::protobuf::uint8* ToolAnnotations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ToolAnnotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ToolAnnotations.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // bool read_only_hint = 2;
  if (this->read_only_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->read_only_hint(), target);
  }

  // bool destructive_hint = 3;
  if (this->destructive_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->destructive_hint(), target);
  }

  // bool idempotent_hint = 4;
  if (this->idempotent_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->idempotent_hint(), target);
  }

  // bool open_world_hint = 5;
  if (this->open_world_hint() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->open_world_hint(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ToolAnnotations)
  return target;
}

size_t ToolAnnotations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ToolAnnotations)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // bool read_only_hint = 2;
  if (this->read_only_hint() != 0) {
    total_size += 1 + 1;
  }

  // bool destructive_hint = 3;
  if (this->destructive_hint() != 0) {
    total_size += 1 + 1;
  }

  // bool idempotent_hint = 4;
  if (this->idempotent_hint() != 0) {
    total_size += 1 + 1;
  }

  // bool open_world_hint = 5;
  if (this->open_world_hint() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ToolAnnotations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ToolAnnotations)
  GOOGLE_DCHECK_NE(&from, this);
  const ToolAnnotations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ToolAnnotations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ToolAnnotations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ToolAnnotations)
    MergeFrom(*source);
  }
}

void ToolAnnotations::MergeFrom(const ToolAnnotations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ToolAnnotations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.read_only_hint() != 0) {
    set_read_only_hint(from.read_only_hint());
  }
  if (from.destructive_hint() != 0) {
    set_destructive_hint(from.destructive_hint());
  }
  if (from.idempotent_hint() != 0) {
    set_idempotent_hint(from.idempotent_hint());
  }
  if (from.open_world_hint() != 0) {
    set_open_world_hint(from.open_world_hint());
  }
}

void ToolAnnotations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ToolAnnotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ToolAnnotations::CopyFrom(const ToolAnnotations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ToolAnnotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ToolAnnotations::IsInitialized() const {
  return true;
}

void ToolAnnotations::Swap(ToolAnnotations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ToolAnnotations::InternalSwap(ToolAnnotations* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(read_only_hint_, other->read_only_hint_);
  swap(destructive_hint_, other->destructive_hint_);
  swap(idempotent_hint_, other->idempotent_hint_);
  swap(open_world_hint_, other->open_world_hint_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ToolAnnotations::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Annotations::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Annotations::kAudienceFieldNumber;
const int Annotations::kPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Annotations::Annotations()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Annotations.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Annotations)
}
Annotations::Annotations(const Annotations& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      audience_(from.audience_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  priority_ = from.priority_;
  // @@protoc_insertion_point(copy_constructor:mcp.Annotations)
}

void Annotations::SharedCtor() {
  priority_ = 0;
}

Annotations::~Annotations() {
  // @@protoc_insertion_point(destructor:mcp.Annotations)
  SharedDtor();
}

void Annotations::SharedDtor() {
}

void Annotations::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Annotations::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Annotations& Annotations::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Annotations.base);
  return *internal_default_instance();
}


void Annotations::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Annotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audience_.Clear();
  priority_ = 0;
  _internal_metadata_.Clear();
}

bool Annotations::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Annotations)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.Role audience = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_audience(static_cast< ::mcp::Role >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_audience(static_cast< ::mcp::Role >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Annotations)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Annotations)
  return false;
#undef DO_
}

void Annotations::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Annotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.Role audience = 1;
  if (this->audience_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_audience_cached_byte_size_));
  }
  for (int i = 0, n = this->audience_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->audience(i), output);
  }

  // float priority = 2;
  if (this->priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Annotations)
}

::google::protobuf::uint8* Annotations::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Annotations)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.Role audience = 1;
  if (this->audience_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _audience_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->audience_, target);
  }

  // float priority = 2;
  if (this->priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Annotations)
  return target;
}

size_t Annotations::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Annotations)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.Role audience = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->audience_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->audience(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _audience_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // float priority = 2;
  if (this->priority() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Annotations::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  const Annotations* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Annotations>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Annotations)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Annotations)
    MergeFrom(*source);
  }
}

void Annotations::MergeFrom(const Annotations& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Annotations)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  audience_.MergeFrom(from.audience_);
  if (from.priority() != 0) {
    set_priority(from.priority());
  }
}

void Annotations::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Annotations::CopyFrom(const Annotations& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Annotations)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Annotations::IsInitialized() const {
  return true;
}

void Annotations::Swap(Annotations* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Annotations::InternalSwap(Annotations* other) {
  using std::swap;
  audience_.InternalSwap(&other->audience_);
  swap(priority_, other->priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Annotations::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TextContent::InitAsDefaultInstance() {
  ::mcp::_TextContent_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::Annotations*>(
      ::mcp::Annotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextContent::kTypeFieldNumber;
const int TextContent::kTextFieldNumber;
const int TextContent::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextContent::TextContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_TextContent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.TextContent)
}
TextContent::TextContent(const TextContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.TextContent)
}

void TextContent::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  annotations_ = NULL;
}

TextContent::~TextContent() {
  // @@protoc_insertion_point(destructor:mcp.TextContent)
  SharedDtor();
}

void TextContent::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotations_;
}

void TextContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TextContent::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextContent& TextContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_TextContent.base);
  return *internal_default_instance();
}


void TextContent::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.TextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool TextContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.TextContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.TextContent.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.TextContent.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Annotations annotations = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.TextContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.TextContent)
  return false;
#undef DO_
}

void TextContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.TextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextContent.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextContent.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // .mcp.Annotations annotations = 3;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.TextContent)
}

::google::protobuf::uint8* TextContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.TextContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextContent.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.TextContent.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // .mcp.Annotations annotations = 3;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.TextContent)
  return target;
}

size_t TextContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.TextContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .mcp.Annotations annotations = 3;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TextContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.TextContent)
  GOOGLE_DCHECK_NE(&from, this);
  const TextContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.TextContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.TextContent)
    MergeFrom(*source);
  }
}

void TextContent::MergeFrom(const TextContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.TextContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::Annotations::MergeFrom(from.annotations());
  }
}

void TextContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.TextContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextContent::CopyFrom(const TextContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.TextContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextContent::IsInitialized() const {
  return true;
}

void TextContent::Swap(TextContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextContent::InternalSwap(TextContent* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TextContent::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ImageContent::InitAsDefaultInstance() {
  ::mcp::_ImageContent_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::Annotations*>(
      ::mcp::Annotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageContent::kTypeFieldNumber;
const int ImageContent::kDataFieldNumber;
const int ImageContent::kMimeTypeFieldNumber;
const int ImageContent::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageContent::ImageContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ImageContent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ImageContent)
}
ImageContent::ImageContent(const ImageContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ImageContent)
}

void ImageContent::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  annotations_ = NULL;
}

ImageContent::~ImageContent() {
  // @@protoc_insertion_point(destructor:mcp.ImageContent)
  SharedDtor();
}

void ImageContent::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotations_;
}

void ImageContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ImageContent::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageContent& ImageContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ImageContent.base);
  return *internal_default_instance();
}


void ImageContent::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ImageContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool ImageContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ImageContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ImageContent.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ImageContent.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Annotations annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ImageContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ImageContent)
  return false;
#undef DO_
}

void ImageContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ImageContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ImageContent.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ImageContent.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mime_type(), output);
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ImageContent)
}

::google::protobuf::uint8* ImageContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ImageContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ImageContent.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ImageContent.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mime_type(), target);
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ImageContent)
  return target;
}

size_t ImageContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ImageContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ImageContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ImageContent)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ImageContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ImageContent)
    MergeFrom(*source);
  }
}

void ImageContent::MergeFrom(const ImageContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ImageContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::Annotations::MergeFrom(from.annotations());
  }
}

void ImageContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ImageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageContent::CopyFrom(const ImageContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ImageContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageContent::IsInitialized() const {
  return true;
}

void ImageContent::Swap(ImageContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageContent::InternalSwap(ImageContent* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ImageContent::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AudioContent::InitAsDefaultInstance() {
  ::mcp::_AudioContent_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::mcp::Annotations*>(
      ::mcp::Annotations::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AudioContent::kTypeFieldNumber;
const int AudioContent::kDataFieldNumber;
const int AudioContent::kMimeTypeFieldNumber;
const int AudioContent::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AudioContent::AudioContent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_AudioContent.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.AudioContent)
}
AudioContent::AudioContent(const AudioContent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mime_type().size() > 0) {
    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    annotations_ = new ::mcp::Annotations(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.AudioContent)
}

void AudioContent::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  annotations_ = NULL;
}

AudioContent::~AudioContent() {
  // @@protoc_insertion_point(destructor:mcp.AudioContent)
  SharedDtor();
}

void AudioContent::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete annotations_;
}

void AudioContent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AudioContent::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AudioContent& AudioContent::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_AudioContent.base);
  return *internal_default_instance();
}


void AudioContent::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.AudioContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mime_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool AudioContent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.AudioContent)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.AudioContent.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes data = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mime_type = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mime_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mime_type().data(), static_cast<int>(this->mime_type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.AudioContent.mime_type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Annotations annotations = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.AudioContent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.AudioContent)
  return false;
#undef DO_
}

void AudioContent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.AudioContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.AudioContent.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->data(), output);
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.AudioContent.mime_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->mime_type(), output);
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.AudioContent)
}

::google::protobuf::uint8* AudioContent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.AudioContent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.AudioContent.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->data(), target);
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mime_type().data(), static_cast<int>(this->mime_type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.AudioContent.mime_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->mime_type(), target);
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.AudioContent)
  return target;
}

size_t AudioContent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.AudioContent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes data = 2;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string mime_type = 3;
  if (this->mime_type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mime_type());
  }

  // .mcp.Annotations annotations = 4;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioContent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.AudioContent)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioContent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AudioContent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.AudioContent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.AudioContent)
    MergeFrom(*source);
  }
}

void AudioContent::MergeFrom(const AudioContent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.AudioContent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.mime_type().size() > 0) {

    mime_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mime_type_);
  }
  if (from.has_annotations()) {
    mutable_annotations()->::mcp::Annotations::MergeFrom(from.annotations());
  }
}

void AudioContent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.AudioContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioContent::CopyFrom(const AudioContent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.AudioContent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioContent::IsInitialized() const {
  return true;
}

void AudioContent::Swap(AudioContent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AudioContent::InternalSwap(AudioContent* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mime_type_.Swap(&other->mime_type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AudioContent::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelPreferences::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelPreferences::kHintsFieldNumber;
const int ModelPreferences::kCostPriorityFieldNumber;
const int ModelPreferences::kSpeedPriorityFieldNumber;
const int ModelPreferences::kIntelligencePriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelPreferences::ModelPreferences()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ModelPreferences.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ModelPreferences)
}
ModelPreferences::ModelPreferences(const ModelPreferences& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      hints_(from.hints_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cost_priority_, &from.cost_priority_,
    static_cast<size_t>(reinterpret_cast<char*>(&intelligence_priority_) -
    reinterpret_cast<char*>(&cost_priority_)) + sizeof(intelligence_priority_));
  // @@protoc_insertion_point(copy_constructor:mcp.ModelPreferences)
}

void ModelPreferences::SharedCtor() {
  ::memset(&cost_priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intelligence_priority_) -
      reinterpret_cast<char*>(&cost_priority_)) + sizeof(intelligence_priority_));
}

ModelPreferences::~ModelPreferences() {
  // @@protoc_insertion_point(destructor:mcp.ModelPreferences)
  SharedDtor();
}

void ModelPreferences::SharedDtor() {
}

void ModelPreferences::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelPreferences::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelPreferences& ModelPreferences::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ModelPreferences.base);
  return *internal_default_instance();
}


void ModelPreferences::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ModelPreferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hints_.Clear();
  ::memset(&cost_priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&intelligence_priority_) -
      reinterpret_cast<char*>(&cost_priority_)) + sizeof(intelligence_priority_));
  _internal_metadata_.Clear();
}

bool ModelPreferences::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ModelPreferences)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.ModelHint hints = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_hints()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float cost_priority = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &cost_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float speed_priority = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &speed_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float intelligence_priority = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &intelligence_priority_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ModelPreferences)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ModelPreferences)
  return false;
#undef DO_
}

void ModelPreferences::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ModelPreferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.ModelHint hints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hints_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->hints(static_cast<int>(i)),
      output);
  }

  // float cost_priority = 2;
  if (this->cost_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->cost_priority(), output);
  }

  // float speed_priority = 3;
  if (this->speed_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->speed_priority(), output);
  }

  // float intelligence_priority = 4;
  if (this->intelligence_priority() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->intelligence_priority(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ModelPreferences)
}

::google::protobuf::uint8* ModelPreferences::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ModelPreferences)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.ModelHint hints = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->hints_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->hints(static_cast<int>(i)), deterministic, target);
  }

  // float cost_priority = 2;
  if (this->cost_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->cost_priority(), target);
  }

  // float speed_priority = 3;
  if (this->speed_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->speed_priority(), target);
  }

  // float intelligence_priority = 4;
  if (this->intelligence_priority() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->intelligence_priority(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ModelPreferences)
  return target;
}

size_t ModelPreferences::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ModelPreferences)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.ModelHint hints = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->hints_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->hints(static_cast<int>(i)));
    }
  }

  // float cost_priority = 2;
  if (this->cost_priority() != 0) {
    total_size += 1 + 4;
  }

  // float speed_priority = 3;
  if (this->speed_priority() != 0) {
    total_size += 1 + 4;
  }

  // float intelligence_priority = 4;
  if (this->intelligence_priority() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelPreferences::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ModelPreferences)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelPreferences* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelPreferences>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ModelPreferences)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ModelPreferences)
    MergeFrom(*source);
  }
}

void ModelPreferences::MergeFrom(const ModelPreferences& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ModelPreferences)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  hints_.MergeFrom(from.hints_);
  if (from.cost_priority() != 0) {
    set_cost_priority(from.cost_priority());
  }
  if (from.speed_priority() != 0) {
    set_speed_priority(from.speed_priority());
  }
  if (from.intelligence_priority() != 0) {
    set_intelligence_priority(from.intelligence_priority());
  }
}

void ModelPreferences::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ModelPreferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelPreferences::CopyFrom(const ModelPreferences& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ModelPreferences)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelPreferences::IsInitialized() const {
  return true;
}

void ModelPreferences::Swap(ModelPreferences* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelPreferences::InternalSwap(ModelPreferences* other) {
  using std::swap;
  CastToBase(&hints_)->InternalSwap(CastToBase(&other->hints_));
  swap(cost_priority_, other->cost_priority_);
  swap(speed_priority_, other->speed_priority_);
  swap(intelligence_priority_, other->intelligence_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelPreferences::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ModelHint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ModelHint::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ModelHint::ModelHint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ModelHint.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ModelHint)
}
ModelHint::ModelHint(const ModelHint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ModelHint)
}

void ModelHint::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ModelHint::~ModelHint() {
  // @@protoc_insertion_point(destructor:mcp.ModelHint)
  SharedDtor();
}

void ModelHint::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ModelHint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ModelHint::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ModelHint& ModelHint::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ModelHint.base);
  return *internal_default_instance();
}


void ModelHint::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ModelHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ModelHint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ModelHint)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ModelHint.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ModelHint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ModelHint)
  return false;
#undef DO_
}

void ModelHint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ModelHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ModelHint.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ModelHint)
}

::google::protobuf::uint8* ModelHint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ModelHint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ModelHint.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ModelHint)
  return target;
}

size_t ModelHint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ModelHint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelHint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ModelHint)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelHint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ModelHint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ModelHint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ModelHint)
    MergeFrom(*source);
  }
}

void ModelHint::MergeFrom(const ModelHint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ModelHint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void ModelHint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ModelHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelHint::CopyFrom(const ModelHint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ModelHint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelHint::IsInitialized() const {
  return true;
}

void ModelHint::Swap(ModelHint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ModelHint::InternalSwap(ModelHint* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ModelHint::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ResourceReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResourceReference::kTypeFieldNumber;
const int ResourceReference::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResourceReference::ResourceReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ResourceReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ResourceReference)
}
ResourceReference::ResourceReference(const ResourceReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ResourceReference)
}

void ResourceReference::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ResourceReference::~ResourceReference() {
  // @@protoc_insertion_point(destructor:mcp.ResourceReference)
  SharedDtor();
}

void ResourceReference::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResourceReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ResourceReference::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ResourceReference& ResourceReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ResourceReference.base);
  return *internal_default_instance();
}


void ResourceReference::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ResourceReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ResourceReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ResourceReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceReference.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string uri = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ResourceReference.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ResourceReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ResourceReference)
  return false;
#undef DO_
}

void ResourceReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ResourceReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceReference.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceReference.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ResourceReference)
}

::google::protobuf::uint8* ResourceReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ResourceReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceReference.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ResourceReference.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ResourceReference)
  return target;
}

size_t ResourceReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ResourceReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string uri = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ResourceReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ResourceReference)
  GOOGLE_DCHECK_NE(&from, this);
  const ResourceReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResourceReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ResourceReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ResourceReference)
    MergeFrom(*source);
  }
}

void ResourceReference::MergeFrom(const ResourceReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ResourceReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void ResourceReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ResourceReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResourceReference::CopyFrom(const ResourceReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ResourceReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResourceReference::IsInitialized() const {
  return true;
}

void ResourceReference::Swap(ResourceReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResourceReference::InternalSwap(ResourceReference* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ResourceReference::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PromptReference::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PromptReference::kTypeFieldNumber;
const int PromptReference::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PromptReference::PromptReference()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_PromptReference.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.PromptReference)
}
PromptReference::PromptReference(const PromptReference& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.PromptReference)
}

void PromptReference::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PromptReference::~PromptReference() {
  // @@protoc_insertion_point(destructor:mcp.PromptReference)
  SharedDtor();
}

void PromptReference::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PromptReference::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PromptReference::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PromptReference& PromptReference::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_PromptReference.base);
  return *internal_default_instance();
}


void PromptReference::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.PromptReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PromptReference::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.PromptReference)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.PromptReference.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.PromptReference.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.PromptReference)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.PromptReference)
  return false;
#undef DO_
}

void PromptReference::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.PromptReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PromptReference.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PromptReference.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.PromptReference)
}

::google::protobuf::uint8* PromptReference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.PromptReference)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PromptReference.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PromptReference.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.PromptReference)
  return target;
}

size_t PromptReference::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.PromptReference)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PromptReference::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.PromptReference)
  GOOGLE_DCHECK_NE(&from, this);
  const PromptReference* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PromptReference>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.PromptReference)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.PromptReference)
    MergeFrom(*source);
  }
}

void PromptReference::MergeFrom(const PromptReference& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.PromptReference)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void PromptReference::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.PromptReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PromptReference::CopyFrom(const PromptReference& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.PromptReference)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PromptReference::IsInitialized() const {
  return true;
}

void PromptReference::Swap(PromptReference* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PromptReference::InternalSwap(PromptReference* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PromptReference::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Root::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Root::kUriFieldNumber;
const int Root::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Root::Root()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_Root.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.Root)
}
Root::Root(const Root& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.Root)
}

void Root::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Root::~Root() {
  // @@protoc_insertion_point(destructor:mcp.Root)
  SharedDtor();
}

void Root::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Root::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Root::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Root& Root::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_Root.base);
  return *internal_default_instance();
}


void Root::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.Root)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Root::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.Root)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Root.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.Root.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.Root)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.Root)
  return false;
#undef DO_
}

void Root::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.Root)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Root.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Root.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.Root)
}

::google::protobuf::uint8* Root::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.Root)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Root.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.Root.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.Root)
  return target;
}

size_t Root::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.Root)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Root::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.Root)
  GOOGLE_DCHECK_NE(&from, this);
  const Root* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Root>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.Root)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.Root)
    MergeFrom(*source);
  }
}

void Root::MergeFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.Root)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void Root::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Root::CopyFrom(const Root& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.Root)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Root::IsInitialized() const {
  return true;
}

void Root::Swap(Root* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Root::InternalSwap(Root* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Root::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InitializeRequest::InitAsDefaultInstance() {
  ::mcp::_InitializeRequest_default_instance_._instance.get_mutable()->params_ = const_cast< ::mcp::InitializeParams*>(
      ::mcp::InitializeParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializeRequest::kMethodFieldNumber;
const int InitializeRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializeRequest::InitializeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_InitializeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.InitializeRequest)
}
InitializeRequest::InitializeRequest(const InitializeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    params_ = new ::mcp::InitializeParams(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.InitializeRequest)
}

void InitializeRequest::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

InitializeRequest::~InitializeRequest() {
  // @@protoc_insertion_point(destructor:mcp.InitializeRequest)
  SharedDtor();
}

void InitializeRequest::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void InitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitializeRequest::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitializeRequest& InitializeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_InitializeRequest.base);
  return *internal_default_instance();
}


void InitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  _internal_metadata_.Clear();
}

bool InitializeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.InitializeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InitializeRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.InitializeParams params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.InitializeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.InitializeRequest)
  return false;
#undef DO_
}

void InitializeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // .mcp.InitializeParams params = 2;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.InitializeRequest)
}

::google::protobuf::uint8* InitializeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.InitializeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // .mcp.InitializeParams params = 2;
  if (this->has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.InitializeRequest)
  return target;
}

size_t InitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.InitializeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .mcp.InitializeParams params = 2;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.InitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitializeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.InitializeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.InitializeRequest)
    MergeFrom(*source);
  }
}

void InitializeRequest::MergeFrom(const InitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.InitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    mutable_params()->::mcp::InitializeParams::MergeFrom(from.params());
  }
}

void InitializeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.InitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeRequest::CopyFrom(const InitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.InitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeRequest::IsInitialized() const {
  return true;
}

void InitializeRequest::Swap(InitializeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializeRequest::InternalSwap(InitializeRequest* other) {
  using std::swap;
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitializeRequest::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InitializeParams::InitAsDefaultInstance() {
  ::mcp::_InitializeParams_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::mcp::ClientCapabilities*>(
      ::mcp::ClientCapabilities::internal_default_instance());
  ::mcp::_InitializeParams_default_instance_._instance.get_mutable()->client_info_ = const_cast< ::mcp::Implementation*>(
      ::mcp::Implementation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializeParams::kProtocolVersionFieldNumber;
const int InitializeParams::kCapabilitiesFieldNumber;
const int InitializeParams::kClientInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializeParams::InitializeParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_InitializeParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.InitializeParams)
}
InitializeParams::InitializeParams(const InitializeParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocol_version().size() > 0) {
    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::mcp::ClientCapabilities(*from.capabilities_);
  } else {
    capabilities_ = NULL;
  }
  if (from.has_client_info()) {
    client_info_ = new ::mcp::Implementation(*from.client_info_);
  } else {
    client_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.InitializeParams)
}

void InitializeParams::SharedCtor() {
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&client_info_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(client_info_));
}

InitializeParams::~InitializeParams() {
  // @@protoc_insertion_point(destructor:mcp.InitializeParams)
  SharedDtor();
}

void InitializeParams::SharedDtor() {
  protocol_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete client_info_;
}

void InitializeParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitializeParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitializeParams& InitializeParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_InitializeParams.base);
  return *internal_default_instance();
}


void InitializeParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.InitializeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && capabilities_ != NULL) {
    delete capabilities_;
  }
  capabilities_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_info_ != NULL) {
    delete client_info_;
  }
  client_info_ = NULL;
  _internal_metadata_.Clear();
}

bool InitializeParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.InitializeParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InitializeParams.protocol_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ClientCapabilities capabilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Implementation client_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.InitializeParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.InitializeParams)
  return false;
#undef DO_
}

void InitializeParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.InitializeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeParams.protocol_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocol_version(), output);
  }

  // .mcp.ClientCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_capabilities(), output);
  }

  // .mcp.Implementation client_info = 3;
  if (this->has_client_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_client_info(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.InitializeParams)
}

::google::protobuf::uint8* InitializeParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.InitializeParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeParams.protocol_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocol_version(), target);
  }

  // .mcp.ClientCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_capabilities(), deterministic, target);
  }

  // .mcp.Implementation client_info = 3;
  if (this->has_client_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_client_info(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.InitializeParams)
  return target;
}

size_t InitializeParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.InitializeParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_version());
  }

  // .mcp.ClientCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  // .mcp.Implementation client_info = 3;
  if (this->has_client_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializeParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.InitializeParams)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializeParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitializeParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.InitializeParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.InitializeParams)
    MergeFrom(*source);
  }
}

void InitializeParams::MergeFrom(const InitializeParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.InitializeParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version().size() > 0) {

    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  if (from.has_capabilities()) {
    mutable_capabilities()->::mcp::ClientCapabilities::MergeFrom(from.capabilities());
  }
  if (from.has_client_info()) {
    mutable_client_info()->::mcp::Implementation::MergeFrom(from.client_info());
  }
}

void InitializeParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.InitializeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeParams::CopyFrom(const InitializeParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.InitializeParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeParams::IsInitialized() const {
  return true;
}

void InitializeParams::Swap(InitializeParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializeParams::InternalSwap(InitializeParams* other) {
  using std::swap;
  protocol_version_.Swap(&other->protocol_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capabilities_, other->capabilities_);
  swap(client_info_, other->client_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitializeParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void InitializeResult::InitAsDefaultInstance() {
  ::mcp::_InitializeResult_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::mcp::ServerCapabilities*>(
      ::mcp::ServerCapabilities::internal_default_instance());
  ::mcp::_InitializeResult_default_instance_._instance.get_mutable()->server_info_ = const_cast< ::mcp::Implementation*>(
      ::mcp::Implementation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InitializeResult::kProtocolVersionFieldNumber;
const int InitializeResult::kCapabilitiesFieldNumber;
const int InitializeResult::kServerInfoFieldNumber;
const int InitializeResult::kInstructionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InitializeResult::InitializeResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_InitializeResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.InitializeResult)
}
InitializeResult::InitializeResult(const InitializeResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.protocol_version().size() > 0) {
    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  instructions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.instructions().size() > 0) {
    instructions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instructions_);
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::mcp::ServerCapabilities(*from.capabilities_);
  } else {
    capabilities_ = NULL;
  }
  if (from.has_server_info()) {
    server_info_ = new ::mcp::Implementation(*from.server_info_);
  } else {
    server_info_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.InitializeResult)
}

void InitializeResult::SharedCtor() {
  protocol_version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instructions_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&capabilities_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&server_info_) -
      reinterpret_cast<char*>(&capabilities_)) + sizeof(server_info_));
}

InitializeResult::~InitializeResult() {
  // @@protoc_insertion_point(destructor:mcp.InitializeResult)
  SharedDtor();
}

void InitializeResult::SharedDtor() {
  protocol_version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instructions_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete server_info_;
}

void InitializeResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* InitializeResult::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InitializeResult& InitializeResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_InitializeResult.base);
  return *internal_default_instance();
}


void InitializeResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.InitializeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  protocol_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  instructions_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && capabilities_ != NULL) {
    delete capabilities_;
  }
  capabilities_ = NULL;
  if (GetArenaNoVirtual() == NULL && server_info_ != NULL) {
    delete server_info_;
  }
  server_info_ = NULL;
  _internal_metadata_.Clear();
}

bool InitializeResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.InitializeResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string protocol_version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_protocol_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InitializeResult.protocol_version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ServerCapabilities capabilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.Implementation server_info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_server_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string instructions = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_instructions()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->instructions().data(), static_cast<int>(this->instructions().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.InitializeResult.instructions"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.InitializeResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.InitializeResult)
  return false;
#undef DO_
}

void InitializeResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.InitializeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeResult.protocol_version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->protocol_version(), output);
  }

  // .mcp.ServerCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_capabilities(), output);
  }

  // .mcp.Implementation server_info = 3;
  if (this->has_server_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_server_info(), output);
  }

  // string instructions = 4;
  if (this->instructions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instructions().data(), static_cast<int>(this->instructions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeResult.instructions");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->instructions(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.InitializeResult)
}

::google::protobuf::uint8* InitializeResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.InitializeResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->protocol_version().data(), static_cast<int>(this->protocol_version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeResult.protocol_version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->protocol_version(), target);
  }

  // .mcp.ServerCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_capabilities(), deterministic, target);
  }

  // .mcp.Implementation server_info = 3;
  if (this->has_server_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_server_info(), deterministic, target);
  }

  // string instructions = 4;
  if (this->instructions().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->instructions().data(), static_cast<int>(this->instructions().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.InitializeResult.instructions");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->instructions(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.InitializeResult)
  return target;
}

size_t InitializeResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.InitializeResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string protocol_version = 1;
  if (this->protocol_version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->protocol_version());
  }

  // string instructions = 4;
  if (this->instructions().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->instructions());
  }

  // .mcp.ServerCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  // .mcp.Implementation server_info = 3;
  if (this->has_server_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *server_info_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InitializeResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.InitializeResult)
  GOOGLE_DCHECK_NE(&from, this);
  const InitializeResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InitializeResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.InitializeResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.InitializeResult)
    MergeFrom(*source);
  }
}

void InitializeResult::MergeFrom(const InitializeResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.InitializeResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.protocol_version().size() > 0) {

    protocol_version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.protocol_version_);
  }
  if (from.instructions().size() > 0) {

    instructions_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.instructions_);
  }
  if (from.has_capabilities()) {
    mutable_capabilities()->::mcp::ServerCapabilities::MergeFrom(from.capabilities());
  }
  if (from.has_server_info()) {
    mutable_server_info()->::mcp::Implementation::MergeFrom(from.server_info());
  }
}

void InitializeResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.InitializeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InitializeResult::CopyFrom(const InitializeResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.InitializeResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InitializeResult::IsInitialized() const {
  return true;
}

void InitializeResult::Swap(InitializeResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InitializeResult::InternalSwap(InitializeResult* other) {
  using std::swap;
  protocol_version_.Swap(&other->protocol_version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  instructions_.Swap(&other->instructions_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(capabilities_, other->capabilities_);
  swap(server_info_, other->server_info_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata InitializeResult::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListResourcesRequest::InitAsDefaultInstance() {
  ::mcp::_ListResourcesRequest_default_instance_._instance.get_mutable()->params_ = const_cast< ::mcp::PaginatedParams*>(
      ::mcp::PaginatedParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListResourcesRequest::kMethodFieldNumber;
const int ListResourcesRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListResourcesRequest::ListResourcesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ListResourcesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ListResourcesRequest)
}
ListResourcesRequest::ListResourcesRequest(const ListResourcesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    params_ = new ::mcp::PaginatedParams(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ListResourcesRequest)
}

void ListResourcesRequest::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

ListResourcesRequest::~ListResourcesRequest() {
  // @@protoc_insertion_point(destructor:mcp.ListResourcesRequest)
  SharedDtor();
}

void ListResourcesRequest::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void ListResourcesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListResourcesRequest::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListResourcesRequest& ListResourcesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ListResourcesRequest.base);
  return *internal_default_instance();
}


void ListResourcesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ListResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  _internal_metadata_.Clear();
}

bool ListResourcesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ListResourcesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ListResourcesRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.PaginatedParams params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ListResourcesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ListResourcesRequest)
  return false;
#undef DO_
}

void ListResourcesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ListResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ListResourcesRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // .mcp.PaginatedParams params = 2;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ListResourcesRequest)
}

::google::protobuf::uint8* ListResourcesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ListResourcesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ListResourcesRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // .mcp.PaginatedParams params = 2;
  if (this->has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ListResourcesRequest)
  return target;
}

size_t ListResourcesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ListResourcesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .mcp.PaginatedParams params = 2;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListResourcesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ListResourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ListResourcesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListResourcesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ListResourcesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ListResourcesRequest)
    MergeFrom(*source);
  }
}

void ListResourcesRequest::MergeFrom(const ListResourcesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ListResourcesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    mutable_params()->::mcp::PaginatedParams::MergeFrom(from.params());
  }
}

void ListResourcesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ListResourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListResourcesRequest::CopyFrom(const ListResourcesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ListResourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResourcesRequest::IsInitialized() const {
  return true;
}

void ListResourcesRequest::Swap(ListResourcesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListResourcesRequest::InternalSwap(ListResourcesRequest* other) {
  using std::swap;
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListResourcesRequest::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ListResourcesResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ListResourcesResult::kResourcesFieldNumber;
const int ListResourcesResult::kNextCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ListResourcesResult::ListResourcesResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ListResourcesResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ListResourcesResult)
}
ListResourcesResult::ListResourcesResult(const ListResourcesResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      resources_(from.resources_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  next_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.next_cursor().size() > 0) {
    next_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_cursor_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ListResourcesResult)
}

void ListResourcesResult::SharedCtor() {
  next_cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ListResourcesResult::~ListResourcesResult() {
  // @@protoc_insertion_point(destructor:mcp.ListResourcesResult)
  SharedDtor();
}

void ListResourcesResult::SharedDtor() {
  next_cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ListResourcesResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ListResourcesResult::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ListResourcesResult& ListResourcesResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ListResourcesResult.base);
  return *internal_default_instance();
}


void ListResourcesResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ListResourcesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  resources_.Clear();
  next_cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ListResourcesResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ListResourcesResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.Resource resources = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_resources()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string next_cursor = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_next_cursor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ListResourcesResult.next_cursor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ListResourcesResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ListResourcesResult)
  return false;
#undef DO_
}

void ListResourcesResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ListResourcesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.Resource resources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->resources(static_cast<int>(i)),
      output);
  }

  // string next_cursor = 2;
  if (this->next_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ListResourcesResult.next_cursor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->next_cursor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ListResourcesResult)
}

::google::protobuf::uint8* ListResourcesResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ListResourcesResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.Resource resources = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->resources_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->resources(static_cast<int>(i)), deterministic, target);
  }

  // string next_cursor = 2;
  if (this->next_cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->next_cursor().data(), static_cast<int>(this->next_cursor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ListResourcesResult.next_cursor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->next_cursor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ListResourcesResult)
  return target;
}

size_t ListResourcesResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ListResourcesResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.Resource resources = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->resources_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->resources(static_cast<int>(i)));
    }
  }

  // string next_cursor = 2;
  if (this->next_cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->next_cursor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ListResourcesResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ListResourcesResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ListResourcesResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ListResourcesResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ListResourcesResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ListResourcesResult)
    MergeFrom(*source);
  }
}

void ListResourcesResult::MergeFrom(const ListResourcesResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ListResourcesResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  resources_.MergeFrom(from.resources_);
  if (from.next_cursor().size() > 0) {

    next_cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.next_cursor_);
  }
}

void ListResourcesResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ListResourcesResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ListResourcesResult::CopyFrom(const ListResourcesResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ListResourcesResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ListResourcesResult::IsInitialized() const {
  return true;
}

void ListResourcesResult::Swap(ListResourcesResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ListResourcesResult::InternalSwap(ListResourcesResult* other) {
  using std::swap;
  CastToBase(&resources_)->InternalSwap(CastToBase(&other->resources_));
  next_cursor_.Swap(&other->next_cursor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ListResourcesResult::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResourceRequest::InitAsDefaultInstance() {
  ::mcp::_ReadResourceRequest_default_instance_._instance.get_mutable()->params_ = const_cast< ::mcp::ReadResourceParams*>(
      ::mcp::ReadResourceParams::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResourceRequest::kMethodFieldNumber;
const int ReadResourceRequest::kParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResourceRequest::ReadResourceRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ReadResourceRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ReadResourceRequest)
}
ReadResourceRequest::ReadResourceRequest(const ReadResourceRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    params_ = new ::mcp::ReadResourceParams(*from.params_);
  } else {
    params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ReadResourceRequest)
}

void ReadResourceRequest::SharedCtor() {
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  params_ = NULL;
}

ReadResourceRequest::~ReadResourceRequest() {
  // @@protoc_insertion_point(destructor:mcp.ReadResourceRequest)
  SharedDtor();
}

void ReadResourceRequest::SharedDtor() {
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete params_;
}

void ReadResourceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResourceRequest::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResourceRequest& ReadResourceRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ReadResourceRequest.base);
  return *internal_default_instance();
}


void ReadResourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ReadResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && params_ != NULL) {
    delete params_;
  }
  params_ = NULL;
  _internal_metadata_.Clear();
}

bool ReadResourceRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ReadResourceRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), static_cast<int>(this->method().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ReadResourceRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .mcp.ReadResourceParams params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ReadResourceRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ReadResourceRequest)
  return false;
#undef DO_
}

void ReadResourceRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ReadResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ReadResourceRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->method(), output);
  }

  // .mcp.ReadResourceParams params = 2;
  if (this->has_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ReadResourceRequest)
}

::google::protobuf::uint8* ReadResourceRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ReadResourceRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string method = 1;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), static_cast<int>(this->method().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ReadResourceRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->method(), target);
  }

  // .mcp.ReadResourceParams params = 2;
  if (this->has_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ReadResourceRequest)
  return target;
}

size_t ReadResourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ReadResourceRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string method = 1;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // .mcp.ReadResourceParams params = 2;
  if (this->has_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResourceRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ReadResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResourceRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResourceRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ReadResourceRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ReadResourceRequest)
    MergeFrom(*source);
  }
}

void ReadResourceRequest::MergeFrom(const ReadResourceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ReadResourceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.has_params()) {
    mutable_params()->::mcp::ReadResourceParams::MergeFrom(from.params());
  }
}

void ReadResourceRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ReadResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResourceRequest::CopyFrom(const ReadResourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ReadResourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResourceRequest::IsInitialized() const {
  return true;
}

void ReadResourceRequest::Swap(ReadResourceRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResourceRequest::InternalSwap(ReadResourceRequest* other) {
  using std::swap;
  method_.Swap(&other->method_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(params_, other->params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResourceRequest::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResourceParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResourceParams::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResourceParams::ReadResourceParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ReadResourceParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ReadResourceParams)
}
ReadResourceParams::ReadResourceParams(const ReadResourceParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.uri().size() > 0) {
    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.ReadResourceParams)
}

void ReadResourceParams::SharedCtor() {
  uri_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ReadResourceParams::~ReadResourceParams() {
  // @@protoc_insertion_point(destructor:mcp.ReadResourceParams)
  SharedDtor();
}

void ReadResourceParams::SharedDtor() {
  uri_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ReadResourceParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResourceParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResourceParams& ReadResourceParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ReadResourceParams.base);
  return *internal_default_instance();
}


void ReadResourceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ReadResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ReadResourceParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ReadResourceParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string uri = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_uri()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->uri().data(), static_cast<int>(this->uri().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.ReadResourceParams.uri"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ReadResourceParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ReadResourceParams)
  return false;
#undef DO_
}

void ReadResourceParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ReadResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ReadResourceParams.uri");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ReadResourceParams)
}

::google::protobuf::uint8* ReadResourceParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ReadResourceParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string uri = 1;
  if (this->uri().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->uri().data(), static_cast<int>(this->uri().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.ReadResourceParams.uri");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->uri(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ReadResourceParams)
  return target;
}

size_t ReadResourceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ReadResourceParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string uri = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->uri());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResourceParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ReadResourceParams)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResourceParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResourceParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ReadResourceParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ReadResourceParams)
    MergeFrom(*source);
  }
}

void ReadResourceParams::MergeFrom(const ReadResourceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ReadResourceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {

    uri_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.uri_);
  }
}

void ReadResourceParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ReadResourceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResourceParams::CopyFrom(const ReadResourceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ReadResourceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResourceParams::IsInitialized() const {
  return true;
}

void ReadResourceParams::Swap(ReadResourceParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResourceParams::InternalSwap(ReadResourceParams* other) {
  using std::swap;
  uri_.Swap(&other->uri_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResourceParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ReadResourceResult::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadResourceResult::kContentsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadResourceResult::ReadResourceResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_ReadResourceResult.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.ReadResourceResult)
}
ReadResourceResult::ReadResourceResult(const ReadResourceResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      contents_(from.contents_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:mcp.ReadResourceResult)
}

void ReadResourceResult::SharedCtor() {
}

ReadResourceResult::~ReadResourceResult() {
  // @@protoc_insertion_point(destructor:mcp.ReadResourceResult)
  SharedDtor();
}

void ReadResourceResult::SharedDtor() {
}

void ReadResourceResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ReadResourceResult::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ReadResourceResult& ReadResourceResult::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_ReadResourceResult.base);
  return *internal_default_instance();
}


void ReadResourceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.ReadResourceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  contents_.Clear();
  _internal_metadata_.Clear();
}

bool ReadResourceResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.ReadResourceResult)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .mcp.ResourceContents contents = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_contents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.ReadResourceResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.ReadResourceResult)
  return false;
#undef DO_
}

void ReadResourceResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.ReadResourceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.ResourceContents contents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contents_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->contents(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.ReadResourceResult)
}

::google::protobuf::uint8* ReadResourceResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.ReadResourceResult)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .mcp.ResourceContents contents = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->contents_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->contents(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.ReadResourceResult)
  return target;
}

size_t ReadResourceResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.ReadResourceResult)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .mcp.ResourceContents contents = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->contents_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->contents(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReadResourceResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.ReadResourceResult)
  GOOGLE_DCHECK_NE(&from, this);
  const ReadResourceResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadResourceResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.ReadResourceResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.ReadResourceResult)
    MergeFrom(*source);
  }
}

void ReadResourceResult::MergeFrom(const ReadResourceResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.ReadResourceResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  contents_.MergeFrom(from.contents_);
}

void ReadResourceResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.ReadResourceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadResourceResult::CopyFrom(const ReadResourceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.ReadResourceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadResourceResult::IsInitialized() const {
  return true;
}

void ReadResourceResult::Swap(ReadResourceResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadResourceResult::InternalSwap(ReadResourceResult* other) {
  using std::swap;
  CastToBase(&contents_)->InternalSwap(CastToBase(&other->contents_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ReadResourceResult::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PaginatedParams::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PaginatedParams::kCursorFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PaginatedParams::PaginatedParams()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_mcp_2eproto::scc_info_PaginatedParams.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:mcp.PaginatedParams)
}
PaginatedParams::PaginatedParams(const PaginatedParams& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cursor().size() > 0) {
    cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
  }
  // @@protoc_insertion_point(copy_constructor:mcp.PaginatedParams)
}

void PaginatedParams::SharedCtor() {
  cursor_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

PaginatedParams::~PaginatedParams() {
  // @@protoc_insertion_point(destructor:mcp.PaginatedParams)
  SharedDtor();
}

void PaginatedParams::SharedDtor() {
  cursor_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PaginatedParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PaginatedParams::descriptor() {
  ::protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PaginatedParams& PaginatedParams::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_mcp_2eproto::scc_info_PaginatedParams.base);
  return *internal_default_instance();
}


void PaginatedParams::Clear() {
// @@protoc_insertion_point(message_clear_start:mcp.PaginatedParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cursor_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool PaginatedParams::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:mcp.PaginatedParams)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string cursor = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cursor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cursor().data(), static_cast<int>(this->cursor().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "mcp.PaginatedParams.cursor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:mcp.PaginatedParams)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:mcp.PaginatedParams)
  return false;
#undef DO_
}

void PaginatedParams::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:mcp.PaginatedParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cursor = 1;
  if (this->cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cursor().data(), static_cast<int>(this->cursor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PaginatedParams.cursor");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->cursor(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:mcp.PaginatedParams)
}

::google::protobuf::uint8* PaginatedParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:mcp.PaginatedParams)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string cursor = 1;
  if (this->cursor().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cursor().data(), static_cast<int>(this->cursor().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "mcp.PaginatedParams.cursor");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->cursor(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:mcp.PaginatedParams)
  return target;
}

size_t PaginatedParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:mcp.PaginatedParams)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string cursor = 1;
  if (this->cursor().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cursor());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PaginatedParams::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:mcp.PaginatedParams)
  GOOGLE_DCHECK_NE(&from, this);
  const PaginatedParams* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PaginatedParams>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:mcp.PaginatedParams)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:mcp.PaginatedParams)
    MergeFrom(*source);
  }
}

void PaginatedParams::MergeFrom(const PaginatedParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:mcp.PaginatedParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.cursor().size() > 0) {

    cursor_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cursor_);
  }
}

void PaginatedParams::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:mcp.PaginatedParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PaginatedParams::CopyFrom(const PaginatedParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:mcp.PaginatedParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PaginatedParams::IsInitialized() const {
  return true;
}

void PaginatedParams::Swap(PaginatedParams* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PaginatedParams::InternalSwap(PaginatedParams* other) {
  using std::swap;
  cursor_.Swap(&other->cursor_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PaginatedParams::GetMetadata() const {
  protobuf_mcp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_mcp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace mcp
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCMessage* Arena::CreateMaybeMessage< ::mcp::JSONRPCMessage >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCRequest* Arena::CreateMaybeMessage< ::mcp::JSONRPCRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCNotification* Arena::CreateMaybeMessage< ::mcp::JSONRPCNotification >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCResponse* Arena::CreateMaybeMessage< ::mcp::JSONRPCResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCError* Arena::CreateMaybeMessage< ::mcp::JSONRPCError >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCError >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCBatchRequest* Arena::CreateMaybeMessage< ::mcp::JSONRPCBatchRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCBatchRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::JSONRPCBatchResponse* Arena::CreateMaybeMessage< ::mcp::JSONRPCBatchResponse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::JSONRPCBatchResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::RequestParams_AdditionalParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::RequestParams_AdditionalParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::RequestParams_AdditionalParamsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::RequestParams* Arena::CreateMaybeMessage< ::mcp::RequestParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::RequestParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::NotificationParams_AdditionalParamsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::NotificationParams* Arena::CreateMaybeMessage< ::mcp::NotificationParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::NotificationParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::MetaParams_AdditionalMetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::MetaParams_AdditionalMetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::MetaParams_AdditionalMetaEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::MetaParams* Arena::CreateMaybeMessage< ::mcp::MetaParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::MetaParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Result_AdditionalResultEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::Result_AdditionalResultEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Result_AdditionalResultEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Result* Arena::CreateMaybeMessage< ::mcp::Result >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Result >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::MetaResult_AdditionalMetaEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::MetaResult_AdditionalMetaEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::MetaResult_AdditionalMetaEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::MetaResult* Arena::CreateMaybeMessage< ::mcp::MetaResult >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::MetaResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Error* Arena::CreateMaybeMessage< ::mcp::Error >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Error >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Implementation* Arena::CreateMaybeMessage< ::mcp::Implementation >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Implementation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ClientCapabilities_ExperimentalEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ClientCapabilities* Arena::CreateMaybeMessage< ::mcp::ClientCapabilities >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ClientCapabilities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ServerCapabilities_ExperimentalEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ServerCapabilities* Arena::CreateMaybeMessage< ::mcp::ServerCapabilities >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ServerCapabilities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::RootsCapability* Arena::CreateMaybeMessage< ::mcp::RootsCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::RootsCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::SamplingCapability* Arena::CreateMaybeMessage< ::mcp::SamplingCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::SamplingCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::LoggingCapability* Arena::CreateMaybeMessage< ::mcp::LoggingCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::LoggingCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::CompletionsCapability* Arena::CreateMaybeMessage< ::mcp::CompletionsCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::CompletionsCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::PromptsCapability* Arena::CreateMaybeMessage< ::mcp::PromptsCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::PromptsCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ResourcesCapability* Arena::CreateMaybeMessage< ::mcp::ResourcesCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ResourcesCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ToolsCapability* Arena::CreateMaybeMessage< ::mcp::ToolsCapability >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ToolsCapability >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Resource* Arena::CreateMaybeMessage< ::mcp::Resource >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Resource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ResourceTemplate* Arena::CreateMaybeMessage< ::mcp::ResourceTemplate >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ResourceTemplate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ResourceContents* Arena::CreateMaybeMessage< ::mcp::ResourceContents >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ResourceContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::TextResourceContents* Arena::CreateMaybeMessage< ::mcp::TextResourceContents >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::TextResourceContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::BlobResourceContents* Arena::CreateMaybeMessage< ::mcp::BlobResourceContents >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::BlobResourceContents >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Tool* Arena::CreateMaybeMessage< ::mcp::Tool >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Tool >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::InputSchema_PropertiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::mcp::InputSchema_PropertiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::InputSchema_PropertiesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::InputSchema* Arena::CreateMaybeMessage< ::mcp::InputSchema >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::InputSchema >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ToolAnnotations* Arena::CreateMaybeMessage< ::mcp::ToolAnnotations >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ToolAnnotations >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Annotations* Arena::CreateMaybeMessage< ::mcp::Annotations >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Annotations >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::TextContent* Arena::CreateMaybeMessage< ::mcp::TextContent >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::TextContent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ImageContent* Arena::CreateMaybeMessage< ::mcp::ImageContent >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ImageContent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::AudioContent* Arena::CreateMaybeMessage< ::mcp::AudioContent >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::AudioContent >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ModelPreferences* Arena::CreateMaybeMessage< ::mcp::ModelPreferences >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ModelPreferences >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ModelHint* Arena::CreateMaybeMessage< ::mcp::ModelHint >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ModelHint >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ResourceReference* Arena::CreateMaybeMessage< ::mcp::ResourceReference >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ResourceReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::PromptReference* Arena::CreateMaybeMessage< ::mcp::PromptReference >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::PromptReference >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::Root* Arena::CreateMaybeMessage< ::mcp::Root >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::Root >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::InitializeRequest* Arena::CreateMaybeMessage< ::mcp::InitializeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::InitializeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::InitializeParams* Arena::CreateMaybeMessage< ::mcp::InitializeParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::InitializeParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::InitializeResult* Arena::CreateMaybeMessage< ::mcp::InitializeResult >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::InitializeResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ListResourcesRequest* Arena::CreateMaybeMessage< ::mcp::ListResourcesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ListResourcesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ListResourcesResult* Arena::CreateMaybeMessage< ::mcp::ListResourcesResult >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ListResourcesResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ReadResourceRequest* Arena::CreateMaybeMessage< ::mcp::ReadResourceRequest >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ReadResourceRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ReadResourceParams* Arena::CreateMaybeMessage< ::mcp::ReadResourceParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ReadResourceParams >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::ReadResourceResult* Arena::CreateMaybeMessage< ::mcp::ReadResourceResult >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::ReadResourceResult >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::mcp::PaginatedParams* Arena::CreateMaybeMessage< ::mcp::PaginatedParams >(Arena* arena) {
  return Arena::CreateInternal< ::mcp::PaginatedParams >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
